{"ast":null,"code":"import { getCurrentInstance, ref, computed, watch, nextTick, onMounted } from 'vue';\nimport { isNumber, useTimeoutFn, isClient } from '@vueuse/core';\nimport '../../../hooks/index2.mjs';\nimport '../../../constants/index2.mjs';\nimport '../../../utils/index2.mjs';\nimport { useZIndex } from '../../../hooks/use-z-index/index2.mjs';\nimport { useGlobalConfig } from '../../../hooks/use-global-config/index2.mjs';\nimport { defaultNamespace } from '../../../hooks/use-namespace/index2.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event2.mjs';\nimport { useLockscreen } from '../../../hooks/use-lockscreen/index2.mjs';\nimport { useModal } from '../../../hooks/use-modal/index2.mjs';\nimport { useRestoreActive } from '../../../hooks/use-restore-active/index2.mjs';\n\nconst useDialog = (props, targetRef) => {\n  const instance = getCurrentInstance();\n  const emit = instance.emit;\n  const {\n    nextZIndex\n  } = useZIndex();\n  let lastPosition = \"\";\n  const visible = ref(false);\n  const closed = ref(false);\n  const rendered = ref(false);\n  const zIndex = ref(props.zIndex || nextZIndex());\n  let openTimer = void 0;\n  let closeTimer = void 0;\n  const normalizeWidth = computed(() => isNumber(props.width) ? `${props.width}px` : props.width);\n  const namespace = useGlobalConfig(\"namespace\", defaultNamespace);\n  const style = computed(() => {\n    const style2 = {};\n    const varPrefix = `--${namespace.value}-dialog`;\n\n    if (!props.fullscreen) {\n      if (props.top) {\n        style2[`${varPrefix}-margin-top`] = props.top;\n      }\n\n      if (props.width) {\n        style2[`${varPrefix}-width`] = normalizeWidth.value;\n      }\n    }\n\n    return style2;\n  });\n\n  function afterEnter() {\n    emit(\"opened\");\n  }\n\n  function afterLeave() {\n    emit(\"closed\");\n    emit(UPDATE_MODEL_EVENT, false);\n\n    if (props.destroyOnClose) {\n      rendered.value = false;\n    }\n  }\n\n  function beforeLeave() {\n    emit(\"close\");\n  }\n\n  function open() {\n    closeTimer == null ? void 0 : closeTimer();\n    openTimer == null ? void 0 : openTimer();\n\n    if (props.openDelay && props.openDelay > 0) {\n      ;\n      ({\n        stop: openTimer\n      } = useTimeoutFn(() => doOpen(), props.openDelay));\n    } else {\n      doOpen();\n    }\n  }\n\n  function close() {\n    openTimer == null ? void 0 : openTimer();\n    closeTimer == null ? void 0 : closeTimer();\n\n    if (props.closeDelay && props.closeDelay > 0) {\n      ;\n      ({\n        stop: closeTimer\n      } = useTimeoutFn(() => doClose(), props.closeDelay));\n    } else {\n      doClose();\n    }\n  }\n\n  function handleClose() {\n    function hide(shouldCancel) {\n      if (shouldCancel) return;\n      closed.value = true;\n      visible.value = false;\n    }\n\n    if (props.beforeClose) {\n      props.beforeClose(hide);\n    } else {\n      close();\n    }\n  }\n\n  function onModalClick() {\n    if (props.closeOnClickModal) {\n      handleClose();\n    }\n  }\n\n  function doOpen() {\n    if (!isClient) return;\n    visible.value = true;\n  }\n\n  function doClose() {\n    visible.value = false;\n  }\n\n  if (props.lockScroll) {\n    useLockscreen(visible);\n  }\n\n  if (props.closeOnPressEscape) {\n    useModal({\n      handleClose\n    }, visible);\n  }\n\n  useRestoreActive(visible);\n  watch(() => props.modelValue, val => {\n    if (val) {\n      closed.value = false;\n      open();\n      rendered.value = true;\n      emit(\"open\");\n      zIndex.value = props.zIndex ? zIndex.value++ : nextZIndex();\n      nextTick(() => {\n        if (targetRef.value) {\n          targetRef.value.scrollTop = 0;\n        }\n      });\n    } else {\n      if (visible.value) {\n        close();\n      }\n    }\n  });\n  watch(() => props.fullscreen, val => {\n    if (!targetRef.value) return;\n\n    if (val) {\n      lastPosition = targetRef.value.style.transform;\n      targetRef.value.style.transform = \"\";\n    } else {\n      targetRef.value.style.transform = lastPosition;\n    }\n  });\n  onMounted(() => {\n    if (props.modelValue) {\n      visible.value = true;\n      rendered.value = true;\n      open();\n    }\n  });\n  return {\n    afterEnter,\n    afterLeave,\n    beforeLeave,\n    handleClose,\n    onModalClick,\n    close,\n    doClose,\n    closed,\n    style,\n    rendered,\n    visible,\n    zIndex\n  };\n};\n\nexport { useDialog };","map":{"version":3,"mappings":"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","names":["useDialog","props","targetRef","instance","getCurrentInstance","emit","nextZIndex","useZIndex","lastPosition","visible","ref","closed","rendered","zIndex","openTimer","closeTimer","normalizeWidth","computed","isNumber","width","namespace","useGlobalConfig","defaultNamespace","style","style2","varPrefix","value","fullscreen","top","afterEnter","afterLeave","UPDATE_MODEL_EVENT","destroyOnClose","beforeLeave","open","openDelay","stop","useTimeoutFn","doOpen","close","closeDelay","doClose","handleClose","hide","shouldCancel","beforeClose","onModalClick","closeOnClickModal","isClient","lockScroll","useLockscreen","closeOnPressEscape","useModal","useRestoreActive","watch","modelValue","val","nextTick","scrollTop","transform","onMounted"],"sources":["../../../../../../packages/components/dialog/src/use-dialog.ts"],"sourcesContent":["import {\n  computed,\n  getCurrentInstance,\n  nextTick,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { isClient, useTimeoutFn } from '@vueuse/core'\n\nimport {\n  defaultNamespace,\n  useGlobalConfig,\n  useLockscreen,\n  useModal,\n  useRestoreActive,\n  useZIndex,\n} from '@element-plus/hooks'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { isNumber } from '@element-plus/utils'\n\nimport type { CSSProperties, Ref, SetupContext } from 'vue'\nimport type { DialogEmits, DialogProps } from './dialog'\n\nexport const useDialog = (\n  props: DialogProps,\n  targetRef: Ref<HTMLElement | undefined>\n) => {\n  const instance = getCurrentInstance()!\n  const emit = instance.emit as SetupContext<DialogEmits>['emit']\n  const { nextZIndex } = useZIndex()\n\n  let lastPosition = ''\n  const visible = ref(false)\n  const closed = ref(false)\n  const rendered = ref(false) // when desctroyOnClose is true, we initialize it as false vise versa\n  const zIndex = ref(props.zIndex || nextZIndex())\n\n  let openTimer: (() => void) | undefined = undefined\n  let closeTimer: (() => void) | undefined = undefined\n\n  const normalizeWidth = computed(() =>\n    isNumber(props.width) ? `${props.width}px` : props.width\n  )\n\n  const namespace = useGlobalConfig('namespace', defaultNamespace)\n\n  const style = computed<CSSProperties>(() => {\n    const style: CSSProperties = {}\n    const varPrefix = `--${namespace.value}-dialog`\n    if (!props.fullscreen) {\n      if (props.top) {\n        style[`${varPrefix}-margin-top`] = props.top\n      }\n      if (props.width) {\n        style[`${varPrefix}-width`] = normalizeWidth.value\n      }\n    }\n    return style\n  })\n\n  function afterEnter() {\n    emit('opened')\n  }\n\n  function afterLeave() {\n    emit('closed')\n    emit(UPDATE_MODEL_EVENT, false)\n    if (props.destroyOnClose) {\n      rendered.value = false\n    }\n  }\n\n  function beforeLeave() {\n    emit('close')\n  }\n\n  function open() {\n    closeTimer?.()\n    openTimer?.()\n\n    if (props.openDelay && props.openDelay > 0) {\n      ;({ stop: openTimer } = useTimeoutFn(() => doOpen(), props.openDelay))\n    } else {\n      doOpen()\n    }\n  }\n\n  function close() {\n    openTimer?.()\n    closeTimer?.()\n\n    if (props.closeDelay && props.closeDelay > 0) {\n      ;({ stop: closeTimer } = useTimeoutFn(() => doClose(), props.closeDelay))\n    } else {\n      doClose()\n    }\n  }\n\n  function handleClose() {\n    function hide(shouldCancel?: boolean) {\n      if (shouldCancel) return\n      closed.value = true\n      visible.value = false\n    }\n\n    if (props.beforeClose) {\n      props.beforeClose(hide)\n    } else {\n      close()\n    }\n  }\n\n  function onModalClick() {\n    if (props.closeOnClickModal) {\n      handleClose()\n    }\n  }\n\n  function doOpen() {\n    if (!isClient) return\n    visible.value = true\n  }\n\n  function doClose() {\n    visible.value = false\n  }\n\n  if (props.lockScroll) {\n    useLockscreen(visible)\n  }\n\n  if (props.closeOnPressEscape) {\n    useModal(\n      {\n        handleClose,\n      },\n      visible\n    )\n  }\n\n  useRestoreActive(visible)\n\n  watch(\n    () => props.modelValue,\n    (val) => {\n      if (val) {\n        closed.value = false\n        open()\n        rendered.value = true // enables lazy rendering\n        emit('open')\n        zIndex.value = props.zIndex ? zIndex.value++ : nextZIndex()\n        // this.$el.addEventListener('scroll', this.updatePopper)\n        nextTick(() => {\n          if (targetRef.value) {\n            targetRef.value.scrollTop = 0\n          }\n        })\n      } else {\n        // this.$el.removeEventListener('scroll', this.updatePopper\n        if (visible.value) {\n          close()\n        }\n      }\n    }\n  )\n\n  watch(\n    () => props.fullscreen,\n    (val) => {\n      if (!targetRef.value) return\n      if (val) {\n        lastPosition = targetRef.value.style.transform\n        targetRef.value.style.transform = ''\n      } else {\n        targetRef.value.style.transform = lastPosition\n      }\n    }\n  )\n\n  onMounted(() => {\n    if (props.modelValue) {\n      visible.value = true\n      rendered.value = true // enables lazy rendering\n      open()\n    }\n  })\n\n  return {\n    afterEnter,\n    afterLeave,\n    beforeLeave,\n    handleClose,\n    onModalClick,\n    close,\n    doClose,\n    closed,\n    style,\n    rendered,\n    visible,\n    zIndex,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}