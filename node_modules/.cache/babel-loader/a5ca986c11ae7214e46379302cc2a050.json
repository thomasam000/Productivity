{"ast":null,"code":"import { defineComponent, openBlock, createBlock, resolveDynamicComponent, normalizeClass, withCtx, createElementVNode, withDirectives, createElementBlock, vModelCheckbox, renderSlot, Fragment, createTextVNode, toDisplayString, createCommentVNode } from 'vue';\nimport '../../../constants/index2.mjs';\nimport '../../../hooks/index2.mjs';\nimport { useCheckboxProps, useCheckbox } from './useCheckbox2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event2.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index2.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElCheckbox\",\n  props: useCheckboxProps,\n  emits: [UPDATE_MODEL_EVENT, \"change\"],\n\n  setup(props, {\n    slots\n  }) {\n    const ns = useNamespace(\"checkbox\");\n    return {\n      ns,\n      ...useCheckbox(props, slots)\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"tabindex\", \"role\", \"aria-checked\"];\nconst _hoisted_2 = [\"id\", \"aria-hidden\", \"name\", \"tabindex\", \"disabled\", \"true-value\", \"false-value\"];\nconst _hoisted_3 = [\"id\", \"aria-hidden\", \"disabled\", \"value\", \"name\", \"tabindex\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(resolveDynamicComponent(!_ctx.hasOwnLabel && _ctx.isLabeledByFormItem ? \"span\" : \"label\"), {\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.m(_ctx.checkboxSize), _ctx.ns.is(\"disabled\", _ctx.isDisabled), _ctx.ns.is(\"bordered\", _ctx.border), _ctx.ns.is(\"checked\", _ctx.isChecked)]),\n    \"aria-controls\": _ctx.indeterminate ? _ctx.controls : null,\n    onClick: _ctx.onClickRoot\n  }, {\n    default: withCtx(() => [createElementVNode(\"span\", {\n      class: normalizeClass([_ctx.ns.e(\"input\"), _ctx.ns.is(\"disabled\", _ctx.isDisabled), _ctx.ns.is(\"checked\", _ctx.isChecked), _ctx.ns.is(\"indeterminate\", _ctx.indeterminate), _ctx.ns.is(\"focus\", _ctx.focus)]),\n      tabindex: _ctx.indeterminate ? 0 : void 0,\n      role: _ctx.indeterminate ? \"checkbox\" : void 0,\n      \"aria-checked\": _ctx.indeterminate ? \"mixed\" : void 0\n    }, [createElementVNode(\"span\", {\n      class: normalizeClass(_ctx.ns.e(\"inner\"))\n    }, null, 2), _ctx.trueLabel || _ctx.falseLabel ? withDirectives((openBlock(), createElementBlock(\"input\", {\n      key: 0,\n      id: _ctx.inputId,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.model = $event),\n      class: normalizeClass(_ctx.ns.e(\"original\")),\n      type: \"checkbox\",\n      \"aria-hidden\": _ctx.indeterminate ? \"true\" : \"false\",\n      name: _ctx.name,\n      tabindex: _ctx.tabindex,\n      disabled: _ctx.isDisabled,\n      \"true-value\": _ctx.trueLabel,\n      \"false-value\": _ctx.falseLabel,\n      onChange: _cache[1] || (_cache[1] = (...args) => _ctx.handleChange && _ctx.handleChange(...args)),\n      onFocus: _cache[2] || (_cache[2] = $event => _ctx.focus = true),\n      onBlur: _cache[3] || (_cache[3] = $event => _ctx.focus = false)\n    }, null, 42, _hoisted_2)), [[vModelCheckbox, _ctx.model]]) : withDirectives((openBlock(), createElementBlock(\"input\", {\n      key: 1,\n      id: _ctx.inputId,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.model = $event),\n      class: normalizeClass(_ctx.ns.e(\"original\")),\n      type: \"checkbox\",\n      \"aria-hidden\": _ctx.indeterminate ? \"true\" : \"false\",\n      disabled: _ctx.isDisabled,\n      value: _ctx.label,\n      name: _ctx.name,\n      tabindex: _ctx.tabindex,\n      onChange: _cache[5] || (_cache[5] = (...args) => _ctx.handleChange && _ctx.handleChange(...args)),\n      onFocus: _cache[6] || (_cache[6] = $event => _ctx.focus = true),\n      onBlur: _cache[7] || (_cache[7] = $event => _ctx.focus = false)\n    }, null, 42, _hoisted_3)), [[vModelCheckbox, _ctx.model]])], 10, _hoisted_1), _ctx.hasOwnLabel ? (openBlock(), createElementBlock(\"span\", {\n      key: 0,\n      class: normalizeClass(_ctx.ns.e(\"label\"))\n    }, [renderSlot(_ctx.$slots, \"default\"), !_ctx.$slots.default ? (openBlock(), createElementBlock(Fragment, {\n      key: 0\n    }, [createTextVNode(toDisplayString(_ctx.label), 1)], 2112)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true)]),\n    _: 3\n  }, 8, [\"class\", \"aria-controls\", \"onClick\"]);\n}\n\nvar Checkbox = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox.vue\"]]);\n\nexport { Checkbox as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","props","emits","UPDATE_MODEL_EVENT","setup","slots","useNamespace","ns","_createBlock","_ctx","class","b","m","is","onClick","_createElementVNode","e","tabindex","role","_normalizeClass","withDirectives","_createElementBlock","key","id","$event","type","disabled","onChange","_cache","onFocus","onBlur","_hoisted_2","_withDirectives","value","_hoisted_3","_renderSlot","default","openBlock","_createCommentVNode"],"sources":["../../../../../../packages/components/checkbox/src/checkbox.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"!hasOwnLabel && isLabeledByFormItem ? 'span' : 'label'\"\n    :class=\"[\n      ns.b(),\n      ns.m(checkboxSize),\n      ns.is('disabled', isDisabled),\n      ns.is('bordered', border),\n      ns.is('checked', isChecked),\n    ]\"\n    :aria-controls=\"indeterminate ? controls : null\"\n    @click=\"onClickRoot\"\n  >\n    <span\n      :class=\"[\n        ns.e('input'),\n        ns.is('disabled', isDisabled),\n        ns.is('checked', isChecked),\n        ns.is('indeterminate', indeterminate),\n        ns.is('focus', focus),\n      ]\"\n      :tabindex=\"indeterminate ? 0 : undefined\"\n      :role=\"indeterminate ? 'checkbox' : undefined\"\n      :aria-checked=\"indeterminate ? 'mixed' : undefined\"\n    >\n      <span :class=\"ns.e('inner')\" />\n      <input\n        v-if=\"trueLabel || falseLabel\"\n        :id=\"inputId\"\n        v-model=\"model\"\n        :class=\"ns.e('original')\"\n        type=\"checkbox\"\n        :aria-hidden=\"indeterminate ? 'true' : 'false'\"\n        :name=\"name\"\n        :tabindex=\"tabindex\"\n        :disabled=\"isDisabled\"\n        :true-value=\"trueLabel\"\n        :false-value=\"falseLabel\"\n        @change=\"handleChange\"\n        @focus=\"focus = true\"\n        @blur=\"focus = false\"\n      />\n      <input\n        v-else\n        :id=\"inputId\"\n        v-model=\"model\"\n        :class=\"ns.e('original')\"\n        type=\"checkbox\"\n        :aria-hidden=\"indeterminate ? 'true' : 'false'\"\n        :disabled=\"isDisabled\"\n        :value=\"label\"\n        :name=\"name\"\n        :tabindex=\"tabindex\"\n        @change=\"handleChange\"\n        @focus=\"focus = true\"\n        @blur=\"focus = false\"\n      />\n    </span>\n    <span v-if=\"hasOwnLabel\" :class=\"ns.e('label')\">\n      <slot />\n      <template v-if=\"!$slots.default\">{{ label }}</template>\n    </span>\n  </component>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useCheckbox, useCheckboxProps } from './useCheckbox'\n\nexport default defineComponent({\n  name: 'ElCheckbox',\n  props: useCheckboxProps,\n  emits: [UPDATE_MODEL_EVENT, 'change'],\n  setup(props, { slots }) {\n    const ns = useNamespace('checkbox')\n\n    return {\n      ns,\n      ...useCheckbox(props, slots),\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}