{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, vModelText as _vModelText, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"onUpdate:modelValue\"];\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = [\"onUpdate:modelValue\"];\nconst _hoisted_7 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_switch, {\n    modelValue: $data.value1,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.value1 = $event)\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\"]), $data.dailyAgenda ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dailyAgenda.dailyAgendaItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id\n    }, [_createTextVNode(_toDisplayString(item.task.name) + \": \" + _toDisplayString(item.task.description) + \" \", 1\n    /* TEXT */\n    ), item.task.type == 'boolean' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", null, \"goal: \" + _toDisplayString(item.task.goal), 1\n    /* TEXT */\n    ), _withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => item.result = $event\n    }, null, 8\n    /* PROPS */\n    , _hoisted_3), [[_vModelCheckbox, item.result]]), item.result ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" Complete \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), item.task.type == 'minutes' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", null, \"goal: \" + _toDisplayString(item.task.goal), 1\n    /* TEXT */\n    ), _withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => item.result = $event\n    }, null, 8\n    /* PROPS */\n    , _hoisted_6), [[_vModelText, item.result]]), item.result >= item.task.goal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \" Complete \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;uBACAA,oBAiBM,KAjBN,EAiBM,IAjBN,EAiBM,CAhBFC,aAA8BC,oBAA9B,EAA8B;gBAAVC,YAAU;+DAAVA,eAAMC;EAAI,CAA9B;;EAAA,iBAgBE,EAfSD,mCAAXH,oBAcM,KAdN,EAcMK,UAdN,EAcM,oBAbFL,oBAYMM,SAZN,EAYM,IAZN,EAYMC,YAZcJ,kBAAYK,gBAY1B,EAZMC,IAAoC,IAAhC;yBAAhBT,oBAYM,KAZN,EAYM;MAZ6CU,GAAG,EAAED,IAAI,CAACE;IAYvD,CAZN,qCACMF,IAAI,CAACG,IAAL,CAAUC,QAAM,OAAEC,iBAAEL,IAAI,CAACG,IAAL,CAAUG,WAAZ,IAAyB,KAC7C;IAAA;OAAWN,IAAI,CAACG,IAAL,CAAUI,IAAV,IAAc,2BAAzBhB,oBAIM,KAJN,EAIMiB,UAJN,EAIM,CAHFC,oBAAmC,KAAnC,EAAmC,IAAnC,EAAK,WAAMJ,iBAAEL,IAAI,CAACG,IAAL,CAAUO,IAAZ,CAAX,EAA2B;IAAA;IAA3B,CAGE,kBAFFD,oBAA6C,OAA7C,EAA6C;MAAtCF,IAAI,EAAC,UAAiC;uCAAbP,IAAI,CAACW,SAAMhB;IAAE,CAA7C;;IAAA,kCAAgCK,IAAI,CAACW,SAEnC,EADSX,IAAI,CAACW,wBAAhBpB,oBAAwC,KAAxC,EAAwCqB,UAAxC,EAAwB,YAAxB,sCACE,CAJN,wCAKWZ,IAAI,CAACG,IAAL,CAAUI,IAAV,IAAc,2BAAzBhB,oBAIM,KAJN,EAIMsB,UAJN,EAIM,CAHFJ,oBAAmC,KAAnC,EAAmC,IAAnC,EAAK,WAAMJ,iBAAEL,IAAI,CAACG,IAAL,CAAUO,IAAZ,CAAX,EAA2B;IAAA;IAA3B,CAGE,kBAFFD,oBAA2C,OAA3C,EAA2C;MAApCF,IAAI,EAAC,QAA+B;uCAAbP,IAAI,CAACW,SAAMhB;IAAE,CAA3C;;IAAA,8BAA8BK,IAAI,CAACW,SAEjC,EADSX,IAAI,CAACW,MAAL,IAAeX,IAAI,CAACG,IAAL,CAAUO,sBAApCnB,oBAA0D,KAA1D,EAA0DuB,UAA1D,EAA0C,YAA1C,sCACE,CAJN,uCAPJ;GAYM,CAZN;;EAAA,CAaE,EAdN,sCAeE,CAjBN","names":["_createElementBlock","_createVNode","_component_el_switch","$data","$event","_hoisted_1","_Fragment","_renderList","dailyAgendaItems","item","key","id","task","name","_toDisplayString","description","type","_hoisted_2","_createElementVNode","goal","result","_hoisted_4","_hoisted_5","_hoisted_7"],"sourceRoot":"","sources":["/Users/samuelthomas/Desktop/productivity/Productivity/src/pages/page-home.vue"],"sourcesContent":["<template>\n<div>\n    <el-switch v-model=\"value1\" />\n    <div v-if=\"dailyAgenda\">\n        <div v-for=\"item in dailyAgenda.dailyAgendaItems\" :key=\"item.id\">\n            {{item.task.name}}: {{item.task.description}}\n            <div v-if=\"item.task.type == 'boolean'\">\n                <div>goal: {{item.task.goal}}</div>\n                <input type=\"checkbox\" v-model=\"item.result\">\n                <div v-if=\"item.result\"> Complete </div>\n            </div>\n            <div v-if=\"item.task.type == 'minutes'\">\n                <div>goal: {{item.task.goal}}</div>\n                <input type=\"number\" v-model=\"item.result\">\n                <div v-if=\"item.result >= item.task.goal\"> Complete </div>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\n\nexport default {\n    data () {\n        return {\n            dailyAgenda: null,\n            today: Math.floor(Date.now() / 1000),\n            value1: true\n        }\n    },\n    computed: {\n\n    },\n    methods: {\n\n    },\n    async created() {\n\n\n        let agendaObject = this.$store.state.dailyAgenda.find(agenda => \n            new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() &&\n            new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() &&\n            new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate()\n        )\n        if (agendaObject === undefined) {\n            await this.$store.dispatch('createDailyAgenda')\n            agendaObject = this.$store.state.dailyAgenda.find(agenda => \n                new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() &&\n                new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() &&\n                new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate()\n            )\n            agendaObject.dailyAgendaItems.forEach(item => {\n                item.task = this.$store.state.tasks.find(task => task.id === item.taskID)\n            });\n            this.dailyAgenda = {... agendaObject}\n\n        } else {\n\n            agendaObject.dailyAgendaItems.forEach(item => {\n                item.task = this.$store.state.tasks.find(task => task.id === item.taskID)\n            });\n            this.dailyAgenda = {... agendaObject}\n\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}