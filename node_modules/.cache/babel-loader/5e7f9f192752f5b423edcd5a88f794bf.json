{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_dailyTaskItem = _resolveComponent(\"dailyTaskItem\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" <el-switch v-model=\\\"value1\\\" /> \"), $data.dailyAgenda ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dailyAgenda.dailyAgendaItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id\n    }, [_createVNode(_component_dailyTaskItem, {\n      dailyAgendaItem: item\n    }, null, 8\n    /* PROPS */\n    , [\"dailyAgendaItem\"]), _createCommentVNode(\" {{item.task.name}}: {{item.task.description}}\\n            <div v-if=\\\"item.task.type == 'boolean'\\\">\\n                <div>goal: {{item.task.goal}}</div>\\n                <input type=\\\"checkbox\\\" v-model=\\\"item.result\\\">\\n                <div v-if=\\\"item.result\\\"> Complete </div>\\n            </div>\\n            <div v-if=\\\"item.task.type == 'minutes'\\\">\\n                <div>goal: {{item.task.goal}}</div>\\n                <input type=\\\"number\\\" v-model=\\\"item.result\\\">\\n                <div v-if=\\\"item.result >= item.task.goal\\\"> Complete </div>\\n            </div> \")]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;;;uBACAA,oBAqBM,KArBN,EAqBM,IArBN,EAqBM,CApBFC,yDAoBE,EAnBSC,mCAAXF,oBAkBM,KAlBN,EAkBMG,UAlBN,EAkBM,oBAjBFH,oBAgBMI,SAhBN,EAgBM,IAhBN,EAgBMC,YAhBcH,kBAAYI,gBAgB1B,EAhBMC,IAAoC,IAAhC;yBAAhBP,oBAgBM,KAhBN,EAgBM;MAhB6CQ,GAAG,EAAED,IAAI,CAACE;IAgBvD,CAhBN,GACGC,aAAuDC,wBAAvD,EAAuD;MAAvCC,eAAe,EAAEL;IAAsB,CAAvD,EAAqC,IAArC,EAAqC;IAAA;IAArC,EAAqC,mBAArC,GACCN,ulBAFJ;GAgBM,CAhBN;;EAAA,CAiBE,EAlBN,sCAmBE,CArBN","names":["_createElementBlock","_createCommentVNode","$data","_hoisted_1","_Fragment","_renderList","dailyAgendaItems","item","key","id","_createVNode","_component_dailyTaskItem","dailyAgendaItem"],"sourceRoot":"","sources":["/Users/samuelthomas/Desktop/productivity/Productivity/src/pages/page-home.vue"],"sourcesContent":["<template>\n<div>\n    <!-- <el-switch v-model=\"value1\" /> -->\n    <div v-if=\"dailyAgenda\">\n        <div v-for=\"item in dailyAgenda.dailyAgendaItems\" :key=\"item.id\">\n           <dailyTaskItem :dailyAgendaItem=\"item\"></dailyTaskItem>\n            <!-- {{item.task.name}}: {{item.task.description}}\n            <div v-if=\"item.task.type == 'boolean'\">\n                <div>goal: {{item.task.goal}}</div>\n                <input type=\"checkbox\" v-model=\"item.result\">\n                <div v-if=\"item.result\"> Complete </div>\n            </div>\n            <div v-if=\"item.task.type == 'minutes'\">\n                <div>goal: {{item.task.goal}}</div>\n                <input type=\"number\" v-model=\"item.result\">\n                <div v-if=\"item.result >= item.task.goal\"> Complete </div>\n            </div> -->\n\n\n\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport dailyTaskItem from '@/components/daily-task-item.vue'\n\nexport default { \n    components: [dailyTaskItem] ,  \n    data () {\n        return {\n            dailyAgenda: null,\n            today: Math.floor(Date.now() / 1000),\n            value1: true\n        }\n    },\n    computed: {\n\n    },\n    methods: {\n\n    },\n    async created() {\n        let agendaObject = this.$store.state.dailyAgenda.find(agenda => \n            new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() &&\n            new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() &&\n            new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate()\n        )\n        if (agendaObject === undefined) {\n            await this.$store.dispatch('createDailyAgenda')\n            agendaObject = this.$store.state.dailyAgenda.find(agenda => \n                new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() &&\n                new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() &&\n                new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate()\n            )\n        } \n        agendaObject.dailyAgendaItems.forEach(item => {\n            item.task = this.$store.state.tasks.find(task => task.id === item.taskID)\n        });\n        this.dailyAgenda = {... agendaObject}\n\n    }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}