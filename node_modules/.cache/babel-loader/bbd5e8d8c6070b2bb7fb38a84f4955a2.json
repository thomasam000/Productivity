{"ast":null,"code":"import { defineComponent, createVNode } from 'vue';\nimport '../../../../hooks/index2.mjs';\nimport { autoResizerProps } from '../auto-resizer2.mjs';\nimport '../composables/index2.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index2.mjs';\nimport { useAutoResize } from '../composables/use-auto-resize2.mjs';\nconst AutoResizer = defineComponent({\n  name: \"ElAutoResizer\",\n  props: autoResizerProps,\n\n  setup(props, {\n    slots\n  }) {\n    const ns = useNamespace(\"auto-resizer\");\n    const {\n      height,\n      width,\n      sizer\n    } = useAutoResize(props);\n    const style = {\n      width: \"100%\",\n      height: \"100%\"\n    };\n    return () => {\n      var _a;\n\n      return createVNode(\"div\", {\n        \"ref\": sizer,\n        \"class\": ns.b(),\n        \"style\": style\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots, {\n        height: height.value,\n        width: width.value\n      })]);\n    };\n  }\n\n});\nexport { AutoResizer as default };","map":{"version":3,"mappings":";;;;;;AAKMA,iBAAW,GAAGC,eAAe,CAAC;EAClCC,IAAI,EAAE,eAD4B;EAElCC,KAAK,EAAEC,gBAF2B;;;IAGlCC;KAAeC;IAAS;IACtB,MAAMC;MACAC,MADAD;MACEC,KADFD;MACUE;IADVF,IACiBG,oBADvB;IACiCC;MACjCF,aADiCE;MAE/BF,QADY;IADmBE;IACjC;MAKA;;MACE;QAAA,OACYD,KADZ;QAC0BH,WAAE,CAACK,CAAHL,EAD1B;QACyCM;MADzC,GAEKP,OAAMQ,aAANR,KAAgB,IAAhBA,GAAgB,MAAhBA,GAAgBS;QACfP,MAAM,EAAEA,MAAM,CAACQ,KADA;QAEfP,KAAK,EAAEA,KAAK,CAACO;MAFE,EAAhBV,CAFL;IADF,CALA;EAeD;;AArBiC,CAAD,CAA7BN","names":["AutoResizer","defineComponent","name","props","autoResizerProps","setup","slots","ns","height","width","sizer","useAutoResize","b","style","default","_a","value"],"sources":["../../../../../../../packages/components/table-v2/src/components/auto-resizer.tsx"],"sourcesContent":["import { defineComponent } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { autoResizerProps } from '../auto-resizer'\nimport { useAutoResize } from '../composables'\n\nconst AutoResizer = defineComponent({\n  name: 'ElAutoResizer',\n  props: autoResizerProps,\n  setup(props, { slots }) {\n    const ns = useNamespace('auto-resizer')\n    const { height, width, sizer } = useAutoResize(props)\n    const style = {\n      width: '100%',\n      height: '100%',\n    }\n\n    return () => {\n      return (\n        <div ref={sizer} class={ns.b()} style={style}>\n          {slots.default?.({\n            height: height.value,\n            width: width.value,\n          })}\n        </div>\n      )\n    }\n  },\n})\n\nexport default AutoResizer\n"]},"metadata":{},"sourceType":"module"}