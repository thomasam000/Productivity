{"ast":null,"code":"import dailyTaskItem from '@/components/daily-task-item.vue';\nexport default {\n  components: {\n    'daily-task-item': dailyTaskItem\n  },\n\n  data() {\n    return {\n      today: Math.floor(Date.now() / 1000),\n      value1: true\n    };\n  },\n\n  computed: {\n    dailyAgenda() {\n      let agendaObject = this.$store.state.dailyAgenda.find(agenda => new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() && new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() && new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate());\n\n      if (agendaObject) {\n        agendaObject.dailyAgendaItems.forEach(item => {\n          item.task = this.$store.state.tasks.find(task => task.id === item.taskID);\n        });\n        return { ...agendaObject\n        };\n      } else {\n        return null;\n      }\n    }\n\n  },\n  methods: {\n    async saveAgendaItem(dailyAgendaItem) {\n      console.log(dailyAgendaItem.result);\n      await this.$store.dispatch('updateDailyAgendaItem', this.dailyAgenda.id, dailyAgendaItem);\n    }\n\n  },\n\n  async created() {\n    let agendaObject = this.$store.state.dailyAgenda.find(agenda => new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() && new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() && new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate());\n\n    if (agendaObject === undefined) {\n      await this.$store.dispatch('createDailyAgenda');\n      agendaObject = this.$store.state.dailyAgenda.find(agenda => new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() && new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() && new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate());\n    } // agendaObject.dailyAgendaItems.forEach(item => {\n    //     item.task = this.$store.state.tasks.find(task => task.id === item.taskID)\n    // });\n    // this.dailyAgenda = {... agendaObject}\n\n  }\n\n};","map":{"version":3,"mappings":"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","names":["dailyTaskItem","components","data","today","Math","floor","Date","now","value1","computed","dailyAgenda","agendaObject","$store","state","find","agenda","date","getFullYear","getMonth","getDate","dailyAgendaItems","forEach","item","task","tasks","id","taskID","methods","saveAgendaItem","dailyAgendaItem","console","log","result","dispatch","created","undefined"],"sourceRoot":"","sources":["/Users/samuelthomas/Desktop/productivity/Productivity/src/pages/page-home.vue"],"sourcesContent":["<template>\n<div>\n    <!-- <el-switch v-model=\"value1\" /> -->\n    <div v-if=\"dailyAgenda\">\n        <div v-for=\"item in dailyAgenda.dailyAgendaItems\" :key=\"item.id\">\n           <daily-task-item :dailyAgendaItem=\"item\" @saveAgendaItem=\"saveAgendaItem\"></daily-task-item>\n        </div>\n    </div>\n\n    visual DB\n        <div v-for=\"item in dailyAgenda.dailyAgendaItems\" :key=\"item.id\">\n            {{item.result}}\n        </div>\n</div>\n</template>\n\n<script>\nimport dailyTaskItem from '@/components/daily-task-item.vue'\n\nexport default { \n    components: {'daily-task-item':dailyTaskItem} ,  \n    data () {\n        return {\n            today: Math.floor(Date.now() / 1000),\n            value1: true\n        }\n    },\n    computed: {\n        dailyAgenda() {\n            let agendaObject = this.$store.state.dailyAgenda.find(agenda => \n                new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() &&\n                new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() &&\n                new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate()\n            )\n            if (agendaObject) {\n                agendaObject.dailyAgendaItems.forEach(item => {\n                    item.task = this.$store.state.tasks.find(task => task.id === item.taskID)\n                });\n                return {... agendaObject}\n            } else {\n                return null\n            }\n        }\n    },\n    methods: {\n        async saveAgendaItem(dailyAgendaItem) {\n            console.log(dailyAgendaItem.result)\n            await this.$store.dispatch('updateDailyAgendaItem', this.dailyAgenda.id, dailyAgendaItem)\n        }\n    },\n    async created() {\n        let agendaObject = this.$store.state.dailyAgenda.find(agenda => \n            new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() &&\n            new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() &&\n            new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate()\n        )\n        if (agendaObject === undefined) {\n            await this.$store.dispatch('createDailyAgenda')\n            agendaObject = this.$store.state.dailyAgenda.find(agenda => \n                new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() &&\n                new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() &&\n                new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate()\n            )\n        } \n        // agendaObject.dailyAgendaItems.forEach(item => {\n        //     item.task = this.$store.state.tasks.find(task => task.id === item.taskID)\n        // });\n        // this.dailyAgenda = {... agendaObject}\n\n    }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}