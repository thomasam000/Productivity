{"ast":null,"code":"import { createStore } from \"vuex\";\nimport sourceData from '@/data';\nexport default createStore({\n  state: sourceData,\n  actions: {\n    createDailyAgenda(context) {\n      console.log(context);\n      var dailyAgenda = {};\n      dailyAgenda['date'] = Math.floor(Date.now() / 1000);\n      dailyAgenda['userID'] = 'ALXhxjwgY9PinwNGHpfai6OWyDu2';\n      dailyAgenda['dailyAgendaItems'] = [];\n      context.state.tasks.forEach(task => {\n        var dailyAgendaItem = {};\n        dailyAgendaItem['taskID'] = task.id;\n\n        if (task.type == 'boolean') {\n          dailyAgendaItem['result'] = false;\n        } else if (task.type == 'minutes') {\n          dailyAgendaItem['result'] = 0;\n        }\n\n        dailyAgenda['dailyAgendaItems'].push(dailyAgendaItem);\n      });\n      context.commit('setDailyAgenda', {\n        dailyAgenda\n      });\n    },\n\n    updateDailyAgendaItem(context, dailyAgendaId, dailyAgendaItem) {\n      context.commit('setDailyAgendaItem', {\n        dailyAgendaId,\n        dailyAgendaItem\n      });\n    }\n\n  },\n  mutations: {\n    setDailyAgenda(state, {\n      dailyAgenda\n    }) {\n      state.dailyAgenda.push(dailyAgenda);\n    },\n\n    setDailyAgendaItem(state, {\n      dailyAgendaId,\n      dailyAgendaItem\n    }) {\n      var dailyAgendaIndex = state.dailyAgenda.findIndex(agenda => agenda.id = dailyAgendaId);\n      var agendaItemIndex = state.dailyAgenda[dailyAgendaIndex].dailyAgendaItems.findIndex(item => item.taskID == dailyAgendaItem.taskID);\n      state.dailyAgenda[dailyAgendaIndex].dailyAgendaItems[agendaItemIndex] = dailyAgendaItem;\n    }\n\n  }\n});","map":{"version":3,"names":["createStore","sourceData","state","actions","createDailyAgenda","context","console","log","dailyAgenda","Math","floor","Date","now","tasks","forEach","task","dailyAgendaItem","id","type","push","commit","updateDailyAgendaItem","dailyAgendaId","mutations","setDailyAgenda","setDailyAgendaItem","dailyAgendaIndex","findIndex","agenda","agendaItemIndex","dailyAgendaItems","item","taskID"],"sources":["/Users/samuelthomas/Desktop/productivity/Productivity/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\nimport sourceData from '@/data'\n\nexport default createStore({ \n    state: sourceData,\n    actions: {\n        createDailyAgenda(context) {\n            console.log(context)\n            var dailyAgenda = {};\n            dailyAgenda['date'] = Math.floor(Date.now() / 1000);\n            dailyAgenda['userID'] = 'ALXhxjwgY9PinwNGHpfai6OWyDu2'\n            dailyAgenda['dailyAgendaItems'] = []\n            context.state.tasks.forEach((task) => {\n                var dailyAgendaItem = {}\n                dailyAgendaItem['taskID'] = task.id\n                if (task.type == 'boolean') {\n                    dailyAgendaItem['result'] = false\n                } else if (task.type == 'minutes') {\n                    dailyAgendaItem['result'] = 0\n                }\n                dailyAgenda['dailyAgendaItems'].push(dailyAgendaItem)\n            })\n            context.commit('setDailyAgenda', {dailyAgenda})\n        },\n        updateDailyAgendaItem(context, dailyAgendaId, dailyAgendaItem) {\n            context.commit('setDailyAgendaItem', {dailyAgendaId, dailyAgendaItem})\n        }\n    },\n    mutations: {\n        setDailyAgenda(state, {dailyAgenda}) {\n            state.dailyAgenda.push(dailyAgenda)\n        },\n        setDailyAgendaItem(state, {dailyAgendaId, dailyAgendaItem}) {\n            var dailyAgendaIndex = state.dailyAgenda.findIndex((agenda) => agenda.id = dailyAgendaId)\n            var agendaItemIndex = state.dailyAgenda[dailyAgendaIndex].dailyAgendaItems.findIndex(item => item.taskID == dailyAgendaItem.taskID)\n            state.dailyAgenda[dailyAgendaIndex].dailyAgendaItems[agendaItemIndex] = dailyAgendaItem\n        }\n    }\n})"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAOC,UAAP,MAAuB,QAAvB;AAEA,eAAeD,WAAW,CAAC;EACvBE,KAAK,EAAED,UADgB;EAEvBE,OAAO,EAAE;IACLC,iBAAiB,CAACC,OAAD,EAAU;MACvBC,OAAO,CAACC,GAAR,CAAYF,OAAZ;MACA,IAAIG,WAAW,GAAG,EAAlB;MACAA,WAAW,CAAC,MAAD,CAAX,GAAsBC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAxB,CAAtB;MACAJ,WAAW,CAAC,QAAD,CAAX,GAAwB,8BAAxB;MACAA,WAAW,CAAC,kBAAD,CAAX,GAAkC,EAAlC;MACAH,OAAO,CAACH,KAAR,CAAcW,KAAd,CAAoBC,OAApB,CAA6BC,IAAD,IAAU;QAClC,IAAIC,eAAe,GAAG,EAAtB;QACAA,eAAe,CAAC,QAAD,CAAf,GAA4BD,IAAI,CAACE,EAAjC;;QACA,IAAIF,IAAI,CAACG,IAAL,IAAa,SAAjB,EAA4B;UACxBF,eAAe,CAAC,QAAD,CAAf,GAA4B,KAA5B;QACH,CAFD,MAEO,IAAID,IAAI,CAACG,IAAL,IAAa,SAAjB,EAA4B;UAC/BF,eAAe,CAAC,QAAD,CAAf,GAA4B,CAA5B;QACH;;QACDR,WAAW,CAAC,kBAAD,CAAX,CAAgCW,IAAhC,CAAqCH,eAArC;MACH,CATD;MAUAX,OAAO,CAACe,MAAR,CAAe,gBAAf,EAAiC;QAACZ;MAAD,CAAjC;IACH,CAlBI;;IAmBLa,qBAAqB,CAAChB,OAAD,EAAUiB,aAAV,EAAyBN,eAAzB,EAA0C;MAC3DX,OAAO,CAACe,MAAR,CAAe,oBAAf,EAAqC;QAACE,aAAD;QAAgBN;MAAhB,CAArC;IACH;;EArBI,CAFc;EAyBvBO,SAAS,EAAE;IACPC,cAAc,CAACtB,KAAD,EAAQ;MAACM;IAAD,CAAR,EAAuB;MACjCN,KAAK,CAACM,WAAN,CAAkBW,IAAlB,CAAuBX,WAAvB;IACH,CAHM;;IAIPiB,kBAAkB,CAACvB,KAAD,EAAQ;MAACoB,aAAD;MAAgBN;IAAhB,CAAR,EAA0C;MACxD,IAAIU,gBAAgB,GAAGxB,KAAK,CAACM,WAAN,CAAkBmB,SAAlB,CAA6BC,MAAD,IAAYA,MAAM,CAACX,EAAP,GAAYK,aAApD,CAAvB;MACA,IAAIO,eAAe,GAAG3B,KAAK,CAACM,WAAN,CAAkBkB,gBAAlB,EAAoCI,gBAApC,CAAqDH,SAArD,CAA+DI,IAAI,IAAIA,IAAI,CAACC,MAAL,IAAehB,eAAe,CAACgB,MAAtG,CAAtB;MACA9B,KAAK,CAACM,WAAN,CAAkBkB,gBAAlB,EAAoCI,gBAApC,CAAqDD,eAArD,IAAwEb,eAAxE;IACH;;EARM;AAzBY,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}