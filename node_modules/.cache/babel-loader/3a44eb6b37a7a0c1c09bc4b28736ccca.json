{"ast":null,"code":"import { defineComponent, getCurrentInstance, inject, computed, openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, Fragment, createTextVNode, toDisplayString, renderSlot } from 'vue';\nimport '../../../utils/index2.mjs';\nimport '../../../hooks/index2.mjs';\nimport { menuItemGroupProps } from './menu-item-group3.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { throwError } from '../../../utils/error2.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index2.mjs';\nconst COMPONENT_NAME = \"ElMenuItemGroup\";\n\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  props: menuItemGroupProps,\n\n  setup() {\n    const instance = getCurrentInstance();\n    const menu = inject(\"rootMenu\");\n    if (!menu) throwError(COMPONENT_NAME, \"can not inject root menu\");\n    const ns = useNamespace(\"menu-item-group\");\n    const levelPadding = computed(() => {\n      if (menu.props.collapse) return 20;\n      let padding = 20;\n      let parent = instance.parent;\n\n      while (parent && parent.type.name !== \"ElMenu\") {\n        if (parent.type.name === \"ElSubMenu\") {\n          padding += 20;\n        }\n\n        parent = parent.parent;\n      }\n\n      return padding;\n    });\n    return {\n      levelPadding,\n      ns\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"li\", {\n    class: normalizeClass(_ctx.ns.b())\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"title\")),\n    style: normalizeStyle({\n      paddingLeft: `${_ctx.levelPadding}px`\n    })\n  }, [!_ctx.$slots.title ? (openBlock(), createElementBlock(Fragment, {\n    key: 0\n  }, [createTextVNode(toDisplayString(_ctx.title), 1)], 2112)) : renderSlot(_ctx.$slots, \"title\", {\n    key: 1\n  })], 6), createElementVNode(\"ul\", null, [renderSlot(_ctx.$slots, \"default\")])], 2);\n}\n\nvar MenuItemGroup = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/menu/src/menu-item-group.vue\"]]);\n\nexport { MenuItemGroup as default };","map":{"version":3,"mappings":";;;;;;;AAoBA,MAAMA,cAAiB,oBAAvB;;AAEA,MAAKC,YAAaC,eAAa;EAC7BC,IAAM,gBADuB;EAG7BC,KAAO,oBAHsB;;EAK7BC,KAAQ;IACN,MAAMC,WAAWC,kBAAmB,EAApC;IACM,aAAOC,OAAqB,UAArB,CAAP;IACN,IAAI,CAACC,IAAL,EAAWC,WAAWV,cAAX,EAA2B,0BAA3B;IACL,WAAKW,aAAa,iBAAb,CAAL;IAEA,qBAAeC,SAAS,MAAM;MAClC,IAAIH,KAAKL,KAAL,CAAWS,QAAf,EAAgC;MAChC,IAAIC,OAAU,KAAd;MACA,IAAIC,SAAST,QAAS,OAAtB;;MACA,OAAOS,MAAU,WAAOC,IAAP,CAAYb,IAAZ,KAAqB,QAAtC,EAAgD;QAC1C,WAAOa,IAAP,CAAYb,IAAZ,KAAqB,WAArB,EAAkC;UACzBW;QACb;;QACAC,SAASA,MAAO,OAAhB;MACF;;MACO;IACR,CAXoB,CAAf;IAaC;MACLE,YADK;MAELC;IAFK;EAIT;;AA5B6B,EAA/B;;;sBArBEC,kBAQK;IARAC,OAAKC,cAAE,SAAGC,CAAH;EAQP,GARW,CACdC,kBAGM;IAHAH,OAAKC,cAAE,SAAGG,CAAH,CAAI,OAAJ,EAGP;IAHuBC,OAAKC;MAAAA,gBAAoBC,IAAY;IAAhCD;EAG5B,GAH4D,CAC/C,aAAOE,KAAP,IAAOC,aAAxBV,kBAAqD;IAAAW;EAAA,oCAAnBH,IAAK,MAAc,GAAd,CAAc,IAAd,IAAc,CAApC,IACjBI,UAA4B;IAAAD;EAAA,EAFoC,CAG5D,EADwB,CACxB,CAJQ,EAKdP,kBAEK,cADHQ,UAAQ,wBACL,EAPS,CAQX","names":["COMPONENT_NAME","_sfc_main","defineComponent","name","props","setup","instance","getCurrentInstance","inject","menu","throwError","useNamespace","computed","collapse","padding","parent","type","levelPadding","ns","_createElementBlock","class","_normalizeClass","b","_createElementVNode","e","style","_normalizeStyle","_ctx","title","openBlock","key","_renderSlot"],"sources":["../../../../../../packages/components/menu/src/menu-item-group.vue"],"sourcesContent":["<template>\n  <li :class=\"ns.b()\">\n    <div :class=\"ns.e('title')\" :style=\"{ paddingLeft: `${levelPadding}px` }\">\n      <template v-if=\"!$slots.title\">{{ title }}</template>\n      <slot v-else name=\"title\" />\n    </div>\n    <ul>\n      <slot />\n    </ul>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, getCurrentInstance, inject } from 'vue'\nimport { throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { menuItemGroupProps } from './menu-item-group'\n\nimport type { MenuProvider } from './types'\n\nconst COMPONENT_NAME = 'ElMenuItemGroup'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n\n  props: menuItemGroupProps,\n\n  setup() {\n    const instance = getCurrentInstance()!\n    const menu = inject<MenuProvider>('rootMenu')\n    if (!menu) throwError(COMPONENT_NAME, 'can not inject root menu')\n    const ns = useNamespace('menu-item-group')\n\n    const levelPadding = computed(() => {\n      if (menu.props.collapse) return 20\n      let padding = 20\n      let parent = instance.parent\n      while (parent && parent.type.name !== 'ElMenu') {\n        if (parent.type.name === 'ElSubMenu') {\n          padding += 20\n        }\n        parent = parent.parent\n      }\n      return padding\n    })\n\n    return {\n      levelPadding,\n      ns,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}