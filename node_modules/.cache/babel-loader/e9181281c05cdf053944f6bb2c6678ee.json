{"ast":null,"code":"// import { mapActions } from 'vuex'\nexport default {\n  data() {\n    return {\n      today: new Date()\n    };\n  },\n\n  computed: {\n    dailyAgenda() {\n      let agendaObject = this.$store.state.dailyAgenda.find(agenda => new Date(agenda.date).getFullYear() === new Date(this.today).getFullYear() && new Date(agenda.date).getMonth() === new Date(this.today).getMonth() && new Date(agenda.date).getDate() === new Date(this.today).getDate());\n      agendaObject.dailyAgendaItems.forEach(item => {\n        item.task = this.$store.state.tasks.find(task => task.id === item.taskID);\n      });\n      return agendaObject;\n    }\n\n  },\n  methods: {// ...mapActions('threads', ['createThread']),\n  },\n\n  created() {\n    let agendaObject = this.$store.state.dailyAgenda.find(agenda => new Date(agenda.date).getFullYear() === new Date(this.today).getFullYear() && new Date(agenda.date).getMonth() === new Date(this.today).getMonth() && new Date(agenda.date).getDate() === new Date(this.today).getDate());\n\n    if (agendaObject === undefined) {\n      this.$store.dispatch('createDailyAgenda');\n    } // let ms = Math.floor(Date.now() / 1000);\n    // console.log(ms)\n    // this.today = ms\n    // console.log(ms);\n    // let date_string = new Date (1594122308).toDateString()\n    // console.log(date_string)\n\n  }\n\n};","map":{"version":3,"mappings":"AAsBA;AAEA,eAAe;EACXA,IAAG,GAAK;IACJ,OAAO;MACHC,KAAK,EAAE,IAAIC,IAAJ;IADJ,CAAP;EAGH,CALU;;EAMXC,QAAQ,EAAE;IACNC,WAAW,GAAG;MACV,IAAIC,YAAW,GAAI,KAAKC,MAAL,CAAYC,KAAZ,CAAkBH,WAAlB,CAA8BI,IAA9B,CAAmCC,MAAK,IACvD,IAAIP,IAAJ,CAASO,MAAM,CAACC,IAAhB,EAAsBC,WAAtB,OAAwC,IAAIT,IAAJ,CAAS,KAAKD,KAAd,EAAqBU,WAArB,EAAxC,IACA,IAAIT,IAAJ,CAASO,MAAM,CAACC,IAAhB,EAAsBE,QAAtB,OAAqC,IAAIV,IAAJ,CAAS,KAAKD,KAAd,EAAqBW,QAArB,EADrC,IAEA,IAAIV,IAAJ,CAASO,MAAM,CAACC,IAAhB,EAAsBG,OAAtB,OAAoC,IAAIX,IAAJ,CAAS,KAAKD,KAAd,EAAqBY,OAArB,EAHrB,CAAnB;MAKAR,YAAY,CAACS,gBAAb,CAA8BC,OAA9B,CAAsCC,IAAG,IAAK;QAC1CA,IAAI,CAACC,IAAL,GAAY,KAAKX,MAAL,CAAYC,KAAZ,CAAkBW,KAAlB,CAAwBV,IAAxB,CAA6BS,IAAG,IAAKA,IAAI,CAACE,EAAL,KAAYH,IAAI,CAACI,MAAtD,CAAZ;MACH,CAFD;MAGA,OAAOf,YAAP;IACH;;EAXK,CANC;EAoBXgB,OAAO,EAAE,CACL;EADK,CApBE;;EAuBXC,OAAO,GAAG;IACF,IAAIjB,YAAW,GAAI,KAAKC,MAAL,CAAYC,KAAZ,CAAkBH,WAAlB,CAA8BI,IAA9B,CAAmCC,MAAK,IACvD,IAAIP,IAAJ,CAASO,MAAM,CAACC,IAAhB,EAAsBC,WAAtB,OAAwC,IAAIT,IAAJ,CAAS,KAAKD,KAAd,EAAqBU,WAArB,EAAxC,IACA,IAAIT,IAAJ,CAASO,MAAM,CAACC,IAAhB,EAAsBE,QAAtB,OAAqC,IAAIV,IAAJ,CAAS,KAAKD,KAAd,EAAqBW,QAArB,EADrC,IAEA,IAAIV,IAAJ,CAASO,MAAM,CAACC,IAAhB,EAAsBG,OAAtB,OAAoC,IAAIX,IAAJ,CAAS,KAAKD,KAAd,EAAqBY,OAArB,EAHrB,CAAnB;;IAKA,IAAIR,YAAW,KAAMkB,SAArB,EAAgC;MAC5B,KAAKjB,MAAL,CAAYkB,QAAZ,CAAqB,mBAArB;IACJ,CARE,CAUN;IACA;IACA;IACA;IACA;IACA;;EACJ;;AAvCW,CAAf","names":["data","today","Date","computed","dailyAgenda","agendaObject","$store","state","find","agenda","date","getFullYear","getMonth","getDate","dailyAgendaItems","forEach","item","task","tasks","id","taskID","methods","created","undefined","dispatch"],"sourceRoot":"","sources":["/Users/samuelthomas/Desktop/productivity-vue/productivity/src/pages/page-home.vue"],"sourcesContent":["<template>\n<div>\n    test\n    <div v-if=\"dailyAgenda\">\n        <div v-for=\"item in dailyAgenda.dailyAgendaItems\" :key=\"item.id\">\n            {{item.task.name}}: {{item.task.description}}\n            <div v-if=\"item.task.type == 'boolean'\">\n                <div>goal: {{item.task.goal}}</div>\n                <div>result: {{item.result}}</div>\n                <div v-if=\"item.result\"> Complete </div>\n            </div>\n            <div v-if=\"item.task.type == 'minutes'\">\n                <div>goal: {{item.task.goal}}</div>\n                <div>result: {{item.result}}</div>\n                <div v-if=\"item.result >= item.task.goal\"> Complete </div>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\n// import { mapActions } from 'vuex'\n\nexport default {\n    data () {\n        return {\n            today: new Date()\n        }\n    },\n    computed: {\n        dailyAgenda() {\n            let agendaObject = this.$store.state.dailyAgenda.find(agenda => \n                new Date(agenda.date).getFullYear() === new Date(this.today).getFullYear() &&\n                new Date(agenda.date).getMonth() === new Date(this.today).getMonth() &&\n                new Date(agenda.date).getDate() === new Date(this.today).getDate()\n            )\n            agendaObject.dailyAgendaItems.forEach(item => {\n                item.task = this.$store.state.tasks.find(task => task.id === item.taskID)\n            });\n            return agendaObject\n        },\n\n    },\n    methods: {\n        // ...mapActions('threads', ['createThread']),\n    },\n    created() {\n            let agendaObject = this.$store.state.dailyAgenda.find(agenda => \n                new Date(agenda.date).getFullYear() === new Date(this.today).getFullYear() &&\n                new Date(agenda.date).getMonth() === new Date(this.today).getMonth() &&\n                new Date(agenda.date).getDate() === new Date(this.today).getDate()\n            )\n            if (agendaObject === undefined) {\n                this.$store.dispatch('createDailyAgenda')\n            }\n\n        // let ms = Math.floor(Date.now() / 1000);\n        // console.log(ms)\n        // this.today = ms\n        // console.log(ms);\n        // let date_string = new Date (1594122308).toDateString()\n        // console.log(date_string)\n    }\n\n    \n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}