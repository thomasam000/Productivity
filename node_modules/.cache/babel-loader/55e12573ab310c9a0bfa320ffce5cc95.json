{"ast":null,"code":"import { defineComponent, ref, nextTick, onMounted, provide, reactive, toRefs, watch, openBlock, createElementBlock, normalizeClass, renderSlot } from 'vue';\nimport '../../../constants/index2.mjs';\nimport '../../../tokens/index2.mjs';\nimport '../../../hooks/index2.mjs';\nimport '../../../utils/index2.mjs';\nimport { radioGroupProps, radioGroupEmits } from './radio-group3.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index2.mjs';\nimport { useFormItem, useFormItemInputId } from '../../../hooks/use-form-item/index2.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event2.mjs';\nimport { EVENT_CODE } from '../../../constants/aria2.mjs';\nimport { radioGroupKey } from '../../../tokens/radio2.mjs';\nimport { debugWarn } from '../../../utils/error2.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElRadioGroup\",\n  props: radioGroupProps,\n  emits: radioGroupEmits,\n\n  setup(props, ctx) {\n    const ns = useNamespace(\"radio\");\n    const radioGroupRef = ref();\n    const {\n      formItem\n    } = useFormItem();\n    const {\n      inputId: groupId,\n      isLabeledByFormItem\n    } = useFormItemInputId(props, {\n      formItemContext: formItem\n    });\n\n    const changeEvent = value => {\n      ctx.emit(UPDATE_MODEL_EVENT, value);\n      nextTick(() => ctx.emit(\"change\", value));\n    };\n\n    const handleKeydown = e => {\n      if (!radioGroupRef.value) return;\n      const target = e.target;\n      const className = target.nodeName === \"INPUT\" ? \"[type=radio]\" : \"[role=radio]\";\n      const radios = radioGroupRef.value.querySelectorAll(className);\n      const length = radios.length;\n      const index = Array.from(radios).indexOf(target);\n      const roleRadios = radioGroupRef.value.querySelectorAll(\"[role=radio]\");\n      let nextIndex = null;\n\n      switch (e.code) {\n        case EVENT_CODE.left:\n        case EVENT_CODE.up:\n          e.stopPropagation();\n          e.preventDefault();\n          nextIndex = index === 0 ? length - 1 : index - 1;\n          break;\n\n        case EVENT_CODE.right:\n        case EVENT_CODE.down:\n          e.stopPropagation();\n          e.preventDefault();\n          nextIndex = index === length - 1 ? 0 : index + 1;\n          break;\n\n        default:\n          break;\n      }\n\n      if (nextIndex === null) return;\n      roleRadios[nextIndex].click();\n      roleRadios[nextIndex].focus();\n    };\n\n    onMounted(() => {\n      const radios = radioGroupRef.value.querySelectorAll(\"[type=radio]\");\n      const firstLabel = radios[0];\n\n      if (!Array.from(radios).some(radio => radio.checked) && firstLabel) {\n        firstLabel.tabIndex = 0;\n      }\n    });\n    provide(radioGroupKey, reactive({ ...toRefs(props),\n      changeEvent\n    }));\n    watch(() => props.modelValue, () => formItem == null ? void 0 : formItem.validate(\"change\").catch(err => debugWarn(err)));\n    return {\n      ns,\n      radioGroupRef,\n      formItem,\n      groupId,\n      isLabeledByFormItem,\n      handleKeydown\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"id\", \"aria-label\", \"aria-labelledby\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    id: _ctx.groupId,\n    ref: \"radioGroupRef\",\n    class: normalizeClass(_ctx.ns.b(\"group\")),\n    role: \"radiogroup\",\n    \"aria-label\": !_ctx.isLabeledByFormItem ? _ctx.label || \"radio-group\" : void 0,\n    \"aria-labelledby\": _ctx.isLabeledByFormItem ? _ctx.formItem.labelId : void 0,\n    onKeydown: _cache[0] || (_cache[0] = (...args) => _ctx.handleKeydown && _ctx.handleKeydown(...args))\n  }, [renderSlot(_ctx.$slots, \"default\")], 42, _hoisted_1);\n}\n\nvar RadioGroup = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/radio/src/radio-group.vue\"]]);\n\nexport { RadioGroup as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","props","emits","setup","ctx","useNamespace","radioGroupRef","ref","formItem","useFormItem","inputId","groupId","isLabeledByFormItem","useFormItemInputId","formItemContext","value","UPDATE_MODEL_EVENT","nextTick","emit","e","target","className","nodeName","radios","querySelectorAll","length","index","Array","indexOf","roleRadios","nextIndex","EVENT_CODE","stopPropagation","preventDefault","click","focus","onMounted","firstLabel","some","radio","checked","tabIndex","provide","radioGroupKey","reactive","toRefs","changeEvent","watch","modelValue","catch","err","ns","handleKeydown","_createElementBlock","id","class","_normalizeClass","b","role","_ctx","labelId","onKeydown","_cache","_renderSlot","_hoisted_1"],"sources":["../../../../../../packages/components/radio/src/radio-group.vue"],"sourcesContent":["<template>\n  <div\n    :id=\"groupId\"\n    ref=\"radioGroupRef\"\n    :class=\"ns.b('group')\"\n    role=\"radiogroup\"\n    :aria-label=\"!isLabeledByFormItem ? label || 'radio-group' : undefined\"\n    :aria-labelledby=\"isLabeledByFormItem ? formItem.labelId : undefined\"\n    @keydown=\"handleKeydown\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  nextTick,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport { EVENT_CODE, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { radioGroupKey } from '@element-plus/tokens'\nimport {\n  useFormItem,\n  useFormItemInputId,\n  useNamespace,\n} from '@element-plus/hooks'\nimport { debugWarn } from '@element-plus/utils'\nimport { radioGroupEmits, radioGroupProps } from './radio-group'\nimport type { RadioGroupProps } from '..'\n\nexport default defineComponent({\n  name: 'ElRadioGroup',\n  props: radioGroupProps,\n  emits: radioGroupEmits,\n\n  setup(props, ctx) {\n    const ns = useNamespace('radio')\n    const radioGroupRef = ref<HTMLDivElement>()\n    const { formItem } = useFormItem()\n    const { inputId: groupId, isLabeledByFormItem } = useFormItemInputId(\n      props,\n      {\n        formItemContext: formItem,\n      }\n    )\n\n    const changeEvent = (value: RadioGroupProps['modelValue']) => {\n      ctx.emit(UPDATE_MODEL_EVENT, value)\n      nextTick(() => ctx.emit('change', value))\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (!radioGroupRef.value) return\n\n      // 左右上下按键 可以在 radio 组内切换不同选项\n      const target = e.target as HTMLInputElement\n      const className =\n        target.nodeName === 'INPUT' ? '[type=radio]' : '[role=radio]'\n      const radios =\n        radioGroupRef.value.querySelectorAll<HTMLInputElement>(className)\n      const length = radios.length\n      const index = Array.from(radios).indexOf(target)\n      const roleRadios =\n        radioGroupRef.value.querySelectorAll<HTMLInputElement>('[role=radio]')\n\n      let nextIndex: number | null = null\n      switch (e.code) {\n        case EVENT_CODE.left:\n        case EVENT_CODE.up:\n          e.stopPropagation()\n          e.preventDefault()\n          nextIndex = index === 0 ? length - 1 : index - 1\n          break\n        case EVENT_CODE.right:\n        case EVENT_CODE.down:\n          e.stopPropagation()\n          e.preventDefault()\n          nextIndex = index === length - 1 ? 0 : index + 1\n          break\n        default:\n          break\n      }\n      if (nextIndex === null) return\n      roleRadios[nextIndex].click()\n      roleRadios[nextIndex].focus()\n    }\n\n    onMounted(() => {\n      const radios =\n        radioGroupRef.value!.querySelectorAll<HTMLInputElement>('[type=radio]')\n      const firstLabel = radios[0]\n      if (!Array.from(radios).some((radio) => radio.checked) && firstLabel) {\n        firstLabel.tabIndex = 0\n      }\n    })\n\n    provide(\n      radioGroupKey,\n      reactive({\n        ...toRefs(props),\n        changeEvent,\n      })\n    )\n\n    watch(\n      () => props.modelValue,\n      () => formItem?.validate('change').catch((err) => debugWarn(err))\n    )\n\n    return {\n      ns,\n      radioGroupRef,\n      formItem,\n      groupId,\n      isLabeledByFormItem,\n      handleKeydown,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}