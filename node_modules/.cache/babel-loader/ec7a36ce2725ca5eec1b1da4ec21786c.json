{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" visual DB \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_daily_task_item = _resolveComponent(\"daily-task-item\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" <el-switch v-model=\\\"value1\\\" /> \"), $options.dailyAgenda ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.dailyAgenda.dailyAgendaItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id\n    }, [_createVNode(_component_daily_task_item, {\n      dailyAgendaItem: item,\n      onSaveAgendaItem: $options.saveAgendaItem\n    }, null, 8\n    /* PROPS */\n    , [\"dailyAgendaItem\", \"onSaveAgendaItem\"])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])) : _createCommentVNode(\"v-if\", true), _hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.dailyAgenda.dailyAgendaItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id\n    }, _toDisplayString(item.result), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;;;;iDAOU;;;;;uBANVA,oBAYM,KAZN,EAYM,IAZN,EAYM,CAXFC,yDAWE,EAVSC,sCAAXF,oBAIM,KAJN,EAIMG,UAJN,EAIM,oBAHFH,oBAEMI,SAFN,EAEM,IAFN,EAEMC,YAFcH,qBAAYI,gBAE1B,EAFMC,IAAoC,IAAhC;yBAAhBP,oBAEM,KAFN,EAEM;MAF6CQ,GAAG,EAAED,IAAI,CAACE;IAEvD,CAFN,GACGC,aAA4FC,0BAA5F,EAA4F;MAA1EC,eAAe,EAAEL,IAAyD;MAAlDM,gBAAc,EAAEX;IAAkC,CAA5F;;IAAA,2CADH;GAEM,CAFN;;EAAA,CAGE,EAJN,sCAUE,iCAHEF,oBAEMI,SAFN,EAEM,IAFN,EAEMC,YAFcH,qBAAYI,gBAE1B,EAFMC,IAAoC,IAAhC;yBAAhBP,oBAEM,KAFN,EAEM;MAF6CQ,GAAG,EAAED,IAAI,CAACE;IAEvD,CAFN,mBACMF,IAAI,CAACO,OADX,EACiB;IAAA;IADjB;GAEM,CAFN;;EAAA,CAGF,EAZN","names":["_createElementBlock","_createCommentVNode","$options","_hoisted_1","_Fragment","_renderList","dailyAgendaItems","item","key","id","_createVNode","_component_daily_task_item","dailyAgendaItem","onSaveAgendaItem","result"],"sourceRoot":"","sources":["/Users/samuelthomas/Desktop/productivity/Productivity/src/pages/page-home.vue"],"sourcesContent":["<template>\n<div>\n    <!-- <el-switch v-model=\"value1\" /> -->\n    <div v-if=\"dailyAgenda\">\n        <div v-for=\"item in dailyAgenda.dailyAgendaItems\" :key=\"item.id\">\n           <daily-task-item :dailyAgendaItem=\"item\" @saveAgendaItem=\"saveAgendaItem\"></daily-task-item>\n        </div>\n    </div>\n\n    visual DB\n        <div v-for=\"item in dailyAgenda.dailyAgendaItems\" :key=\"item.id\">\n            {{item.result}}\n        </div>\n</div>\n</template>\n\n<script>\nimport dailyTaskItem from '@/components/daily-task-item.vue'\n\nexport default { \n    components: {'daily-task-item':dailyTaskItem} ,  \n    data () {\n        return {\n            today: Math.floor(Date.now() / 1000),\n            value1: true\n        }\n    },\n    computed: {\n        dailyAgenda() {\n            let agendaObject = this.$store.state.dailyAgenda.find(agenda => \n                new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() &&\n                new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() &&\n                new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate()\n            )\n            if (agendaObject) {\n                agendaObject.dailyAgendaItems.forEach(item => {\n                    item.task = this.$store.state.tasks.find(task => task.id === item.taskID)\n                });\n                return {... agendaObject}\n            } else {\n                return null\n            }\n        }\n    },\n    methods: {\n        async saveAgendaItem(dailyAgendaItem) {\n            console.log(dailyAgendaItem.result)\n            await this.$store.dispatch('updateDailyAgendaItem', this.dailyAgenda.id, dailyAgendaItem.result)\n        }\n    },\n    async created() {\n        let agendaObject = this.$store.state.dailyAgenda.find(agenda => \n            new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() &&\n            new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() &&\n            new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate()\n        )\n        if (agendaObject === undefined) {\n            await this.$store.dispatch('createDailyAgenda')\n            agendaObject = this.$store.state.dailyAgenda.find(agenda => \n                new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() &&\n                new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() &&\n                new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate()\n            )\n        } \n        // agendaObject.dailyAgendaItems.forEach(item => {\n        //     item.task = this.$store.state.tasks.find(task => task.id === item.taskID)\n        // });\n        // this.dailyAgenda = {... agendaObject}\n\n    }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}