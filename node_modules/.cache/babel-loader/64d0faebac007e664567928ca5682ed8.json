{"ast":null,"code":"import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, renderSlot } from 'vue';\nimport '../../../hooks/index2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index2.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElContainer\",\n  props: {\n    direction: {\n      type: String,\n      default: \"\"\n    }\n  },\n\n  setup(props, {\n    slots\n  }) {\n    const ns = useNamespace(\"container\");\n    const isVertical = computed(() => {\n      if (props.direction === \"vertical\") {\n        return true;\n      } else if (props.direction === \"horizontal\") {\n        return false;\n      }\n\n      if (slots && slots.default) {\n        const vNodes = slots.default();\n        return vNodes.some(vNode => {\n          const tag = vNode.type.name;\n          return tag === \"ElHeader\" || tag === \"ElFooter\";\n        });\n      } else {\n        return false;\n      }\n    });\n    return {\n      isVertical,\n      ns\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"section\", {\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.is(\"vertical\", _ctx.isVertical)])\n  }, [renderSlot(_ctx.$slots, \"default\")], 2);\n}\n\nvar Container = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/container/src/container.vue\"]]);\n\nexport { Container as default };","map":{"version":3,"mappings":";;;;;AAWA,MAAKA,YAAaC,eAAa;EAC7BC,IAAM,eADuB;EAE7BC,KAAO;IACLC,SAAW;MACTC,IAAM,QADG;MAETC,OAAS;IAFA;EADN,CAFsB;;EAQ7BC,MAAMJ,KAAN,EAAa;IAAEK;EAAF,CAAb,EAAwB;IAChB,WAAKC,aAAa,WAAb,CAAL;IAEA,mBAAaC,SAAS,MAAM;MAC5B,UAAMN,SAAN,KAAoB,UAApB,EAAgC;QAC3B;MACT,CAFI,MAEJ,IAAWD,KAAM,UAAN,KAAoB,YAA/B,EAA6C;QACpC;MACT;;MACI,aAASK,MAAMF,OAAf,EAAwB;QACpB,eAAkBE,MAAMF,OAAN,EAAlB;QACC,cAAOK,IAAP,CAAaC,KAAD,IAAW;UACtB,YAAOA,MAAMP,IAAN,CAAyBH,IAAhC;UACC,eAAQ,UAAR,IAAsBW,GAAQ,eAA9B;QACR,CAHM;MAIF,CANH,MAMG;QACE;MACT;IACD,CAfkB,CAAb;IAgBC;MACLC,UADK;MAELC;IAFK;EAIT;;AA/B6B,EAA/B;;;sBAVEC,kBAEU;IAFAC,OAAKC,gBAAGC,IAAG,GAAH,CAAGC,CAAH,EAAHF,EAAWC,IAAG,GAAH,CAAGE,EAAH,CAAK,UAAL,EAAkBF,IAAU,WAA5B,CAAXD;EAEL,GAF4C,CACpDI,UAAQ,wBAD4C,CAE5C,EADA,CACA","names":["_sfc_main","defineComponent","name","props","direction","type","default","setup","slots","useNamespace","computed","some","vNode","tag","isVertical","ns","_createElementBlock","class","_normalizeClass","_ctx","b","is","_renderSlot"],"sources":["../../../../../../packages/components/container/src/container.vue"],"sourcesContent":["<template>\n  <section :class=\"[ns.b(), ns.is('vertical', isVertical)]\">\n    <slot />\n  </section>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { Component, VNode } from 'vue'\n\nexport default defineComponent({\n  name: 'ElContainer',\n  props: {\n    direction: {\n      type: String,\n      default: '',\n    },\n  },\n  setup(props, { slots }) {\n    const ns = useNamespace('container')\n\n    const isVertical = computed(() => {\n      if (props.direction === 'vertical') {\n        return true\n      } else if (props.direction === 'horizontal') {\n        return false\n      }\n      if (slots && slots.default) {\n        const vNodes: VNode[] = slots.default()\n        return vNodes.some((vNode) => {\n          const tag = (vNode.type as Component).name\n          return tag === 'ElHeader' || tag === 'ElFooter'\n        })\n      } else {\n        return false\n      }\n    })\n    return {\n      isVertical,\n      ns,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}