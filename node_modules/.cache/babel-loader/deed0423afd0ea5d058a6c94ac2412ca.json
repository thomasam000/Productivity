{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { defineComponent, inject, ref, watch, nextTick, computed, unref, provide, resolveComponent, openBlock, createBlock, mergeProps, withCtx, normalizeClass, normalizeStyle, withModifiers, resolveDynamicComponent, createCommentVNode, createElementBlock, createElementVNode, renderSlot, toDisplayString } from 'vue';\nimport dayjs from 'dayjs';\nimport { isEqual } from 'lodash-unified';\nimport { onClickOutside } from '@vueuse/core';\nimport '../../../../hooks/index2.mjs';\nimport '../../../../tokens/index2.mjs';\nimport { ElInput } from '../../../input/index2.mjs';\nimport { ElIcon } from '../../../icon/index2.mjs';\nimport { ElTooltip } from '../../../tooltip/index2.mjs';\nimport '../../../../utils/index2.mjs';\nimport '../../../../constants/index2.mjs';\nimport { Clock, Calendar } from '@element-plus/icons-vue';\nimport { timePickerDefaultProps } from './props2.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { isEmpty } from '../../../../utils/types2.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index2.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index2.mjs';\nimport { formContextKey, formItemContextKey } from '../../../../tokens/form2.mjs';\nimport { debugWarn } from '../../../../utils/error2.mjs';\nimport { useSize } from '../../../../hooks/use-common-props/index2.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria2.mjs';\n\nconst dateEquals = function (a, b) {\n  const aIsDate = a instanceof Date;\n  const bIsDate = b instanceof Date;\n\n  if (aIsDate && bIsDate) {\n    return a.getTime() === b.getTime();\n  }\n\n  if (!aIsDate && !bIsDate) {\n    return a === b;\n  }\n\n  return false;\n};\n\nconst valueEquals = function (a, b) {\n  const aIsArray = Array.isArray(a);\n  const bIsArray = Array.isArray(b);\n\n  if (aIsArray && bIsArray) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return a.every((item, index) => dateEquals(item, b[index]));\n  }\n\n  if (!aIsArray && !bIsArray) {\n    return dateEquals(a, b);\n  }\n\n  return false;\n};\n\nconst parser = function (date, format, lang) {\n  const day = isEmpty(format) || format === \"x\" ? dayjs(date).locale(lang) : dayjs(date, format).locale(lang);\n  return day.isValid() ? day : void 0;\n};\n\nconst formatter = function (date, format, lang) {\n  if (isEmpty(format)) return date;\n  if (format === \"x\") return +date;\n  return dayjs(date).locale(lang).format(format);\n};\n\nconst _sfc_main = defineComponent({\n  name: \"Picker\",\n  components: {\n    ElInput,\n    ElTooltip,\n    ElIcon\n  },\n  props: timePickerDefaultProps,\n  emits: [\"update:modelValue\", \"change\", \"focus\", \"blur\", \"calendar-change\", \"panel-change\", \"visible-change\"],\n\n  setup(props, ctx) {\n    const {\n      lang\n    } = useLocale();\n    const nsDate = useNamespace(\"date\");\n    const nsInput = useNamespace(\"input\");\n    const nsRange = useNamespace(\"range\");\n    const elForm = inject(formContextKey, {});\n    const elFormItem = inject(formItemContextKey, {});\n    const elPopperOptions = inject(\"ElPopperOptions\", {});\n    const refPopper = ref();\n    const inputRef = ref();\n    const pickerVisible = ref(false);\n    const pickerActualVisible = ref(false);\n    const valueOnOpen = ref(null);\n    watch(pickerVisible, val => {\n      var _a;\n\n      if (!val) {\n        userInput.value = null;\n        nextTick(() => {\n          emitChange(props.modelValue);\n        });\n        ctx.emit(\"blur\");\n        blurInput();\n        props.validateEvent && ((_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"blur\").catch(err => debugWarn(err)));\n      } else {\n        valueOnOpen.value = props.modelValue;\n      }\n    });\n\n    const emitChange = (val, isClear) => {\n      var _a;\n\n      if (isClear || !valueEquals(val, valueOnOpen.value)) {\n        ctx.emit(\"change\", val);\n        props.validateEvent && ((_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\").catch(err => debugWarn(err)));\n      }\n    };\n\n    const emitInput = val => {\n      if (!valueEquals(props.modelValue, val)) {\n        let formatValue;\n\n        if (Array.isArray(val)) {\n          formatValue = val.map(_ => formatter(_, props.valueFormat, lang.value));\n        } else if (val) {\n          formatValue = formatter(val, props.valueFormat, lang.value);\n        }\n\n        ctx.emit(\"update:modelValue\", val ? formatValue : val, lang.value);\n      }\n    };\n\n    const refInput = computed(() => {\n      if (inputRef.value) {\n        const _r = isRangeInput.value ? inputRef.value : inputRef.value.$el;\n\n        return Array.from(_r.querySelectorAll(\"input\"));\n      }\n\n      return [];\n    });\n    const refStartInput = computed(() => {\n      return refInput == null ? void 0 : refInput.value[0];\n    });\n    const refEndInput = computed(() => {\n      return refInput == null ? void 0 : refInput.value[1];\n    });\n\n    const setSelectionRange = (start, end, pos) => {\n      const _inputs = refInput.value;\n      if (!_inputs.length) return;\n\n      if (!pos || pos === \"min\") {\n        _inputs[0].setSelectionRange(start, end);\n\n        _inputs[0].focus();\n      } else if (pos === \"max\") {\n        _inputs[1].setSelectionRange(start, end);\n\n        _inputs[1].focus();\n      }\n    };\n\n    const onPick = (date = \"\", visible = false) => {\n      pickerVisible.value = visible;\n      let result;\n\n      if (Array.isArray(date)) {\n        result = date.map(_ => _.toDate());\n      } else {\n        result = date ? date.toDate() : date;\n      }\n\n      userInput.value = null;\n      emitInput(result);\n    };\n\n    const onBeforeShow = () => {\n      pickerActualVisible.value = true;\n    };\n\n    const onShow = () => {\n      ctx.emit(\"visible-change\", true);\n    };\n\n    const onHide = () => {\n      pickerActualVisible.value = false;\n      ctx.emit(\"visible-change\", false);\n    };\n\n    const focus = (focusStartInput = true) => {\n      let input = refStartInput.value;\n\n      if (!focusStartInput && isRangeInput.value) {\n        input = refEndInput.value;\n      }\n\n      if (input) {\n        input.focus();\n      }\n    };\n\n    const handleFocus = e => {\n      if (props.readonly || pickerDisabled.value || pickerVisible.value) return;\n      pickerVisible.value = true;\n      ctx.emit(\"focus\", e);\n    };\n\n    const handleBlur = () => {\n      var _a;\n\n      (_a = refPopper.value) == null ? void 0 : _a.onClose();\n      blurInput();\n    };\n\n    const pickerDisabled = computed(() => {\n      return props.disabled || elForm.disabled;\n    });\n    const parsedValue = computed(() => {\n      let result;\n\n      if (valueIsEmpty.value) {\n        if (pickerOptions.value.getDefaultValue) {\n          result = pickerOptions.value.getDefaultValue();\n        }\n      } else {\n        if (Array.isArray(props.modelValue)) {\n          result = props.modelValue.map(_ => parser(_, props.valueFormat, lang.value));\n        } else {\n          result = parser(props.modelValue, props.valueFormat, lang.value);\n        }\n      }\n\n      if (pickerOptions.value.getRangeAvailableTime) {\n        const availableResult = pickerOptions.value.getRangeAvailableTime(result);\n\n        if (!isEqual(availableResult, result)) {\n          result = availableResult;\n          emitInput(Array.isArray(result) ? result.map(_ => _.toDate()) : result.toDate());\n        }\n      }\n\n      if (Array.isArray(result) && result.some(_ => !_)) {\n        result = [];\n      }\n\n      return result;\n    });\n    const displayValue = computed(() => {\n      if (!pickerOptions.value.panelReady) return;\n      const formattedValue = formatDayjsToString(parsedValue.value);\n\n      if (Array.isArray(userInput.value)) {\n        return [userInput.value[0] || formattedValue && formattedValue[0] || \"\", userInput.value[1] || formattedValue && formattedValue[1] || \"\"];\n      } else if (userInput.value !== null) {\n        return userInput.value;\n      }\n\n      if (!isTimePicker.value && valueIsEmpty.value) return;\n      if (!pickerVisible.value && valueIsEmpty.value) return;\n\n      if (formattedValue) {\n        return isDatesPicker.value ? formattedValue.join(\", \") : formattedValue;\n      }\n\n      return \"\";\n    });\n    const isTimeLikePicker = computed(() => props.type.includes(\"time\"));\n    const isTimePicker = computed(() => props.type.startsWith(\"time\"));\n    const isDatesPicker = computed(() => props.type === \"dates\");\n    const triggerIcon = computed(() => props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar));\n    const showClose = ref(false);\n\n    const onClearIconClick = event => {\n      if (props.readonly || pickerDisabled.value) return;\n\n      if (showClose.value) {\n        event.stopPropagation();\n        emitInput(null);\n        emitChange(null, true);\n        showClose.value = false;\n        pickerVisible.value = false;\n        pickerOptions.value.handleClear && pickerOptions.value.handleClear();\n      }\n    };\n\n    const valueIsEmpty = computed(() => {\n      return !props.modelValue || Array.isArray(props.modelValue) && !props.modelValue.length;\n    });\n\n    const onMouseEnter = () => {\n      if (props.readonly || pickerDisabled.value) return;\n\n      if (!valueIsEmpty.value && props.clearable) {\n        showClose.value = true;\n      }\n    };\n\n    const onMouseLeave = () => {\n      showClose.value = false;\n    };\n\n    const isRangeInput = computed(() => {\n      return props.type.includes(\"range\");\n    });\n    const pickerSize = useSize();\n    const popperPaneRef = computed(() => {\n      var _a, _b;\n\n      return (_b = (_a = refPopper.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    const popperEl = computed(() => {\n      var _a, _b;\n\n      return (_b = (_a = unref(refPopper)) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    const actualInputRef = computed(() => {\n      var _a;\n\n      if (unref(isRangeInput)) {\n        return unref(inputRef);\n      }\n\n      return (_a = unref(inputRef)) == null ? void 0 : _a.$el;\n    });\n    onClickOutside(actualInputRef, e => {\n      const unrefedPopperEl = unref(popperEl);\n      const inputEl = unref(actualInputRef);\n      if (unrefedPopperEl && (e.target === unrefedPopperEl || e.composedPath().includes(unrefedPopperEl)) || e.target === inputEl || e.composedPath().includes(inputEl)) return;\n      pickerVisible.value = false;\n    });\n    const userInput = ref(null);\n\n    const handleChange = () => {\n      if (userInput.value) {\n        const value = parseUserInputToDayjs(displayValue.value);\n\n        if (value) {\n          if (isValidValue(value)) {\n            emitInput(Array.isArray(value) ? value.map(_ => _.toDate()) : value.toDate());\n            userInput.value = null;\n          }\n        }\n      }\n\n      if (userInput.value === \"\") {\n        emitInput(null);\n        emitChange(null);\n        userInput.value = null;\n      }\n    };\n\n    const blurInput = () => {\n      refInput.value.forEach(input => input.blur());\n    };\n\n    const parseUserInputToDayjs = value => {\n      if (!value) return null;\n      return pickerOptions.value.parseUserInput(value);\n    };\n\n    const formatDayjsToString = value => {\n      if (!value) return null;\n      return pickerOptions.value.formatToString(value);\n    };\n\n    const isValidValue = value => {\n      return pickerOptions.value.isValidValue(value);\n    };\n\n    const handleKeydown = event => {\n      const code = event.code;\n\n      if (code === EVENT_CODE.esc) {\n        pickerVisible.value = false;\n        event.stopPropagation();\n        return;\n      }\n\n      if (code === EVENT_CODE.tab) {\n        if (!isRangeInput.value) {\n          handleChange();\n          pickerVisible.value = false;\n          event.stopPropagation();\n        } else {\n          setTimeout(() => {\n            if (!refInput.value.includes(document.activeElement)) {\n              pickerVisible.value = false;\n              blurInput();\n            }\n          }, 0);\n        }\n\n        return;\n      }\n\n      if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {\n        if (userInput.value === null || userInput.value === \"\" || isValidValue(parseUserInputToDayjs(displayValue.value))) {\n          handleChange();\n          pickerVisible.value = false;\n        }\n\n        event.stopPropagation();\n        return;\n      }\n\n      if (userInput.value) {\n        event.stopPropagation();\n        return;\n      }\n\n      if (pickerOptions.value.handleKeydown) {\n        pickerOptions.value.handleKeydown(event);\n      }\n    };\n\n    const onUserInput = e => {\n      userInput.value = e;\n    };\n\n    const handleStartInput = event => {\n      if (userInput.value) {\n        userInput.value = [event.target.value, userInput.value[1]];\n      } else {\n        userInput.value = [event.target.value, null];\n      }\n    };\n\n    const handleEndInput = event => {\n      if (userInput.value) {\n        userInput.value = [userInput.value[0], event.target.value];\n      } else {\n        userInput.value = [null, event.target.value];\n      }\n    };\n\n    const handleStartChange = () => {\n      const value = parseUserInputToDayjs(userInput.value && userInput.value[0]);\n\n      if (value && value.isValid()) {\n        userInput.value = [formatDayjsToString(value), displayValue.value[1]];\n        const newValue = [value, parsedValue.value && parsedValue.value[1]];\n\n        if (isValidValue(newValue)) {\n          emitInput(newValue);\n          userInput.value = null;\n        }\n      }\n    };\n\n    const handleEndChange = () => {\n      const value = parseUserInputToDayjs(userInput.value && userInput.value[1]);\n\n      if (value && value.isValid()) {\n        userInput.value = [displayValue.value[0], formatDayjsToString(value)];\n        const newValue = [parsedValue.value && parsedValue.value[0], value];\n\n        if (isValidValue(newValue)) {\n          emitInput(newValue);\n          userInput.value = null;\n        }\n      }\n    };\n\n    const pickerOptions = ref({});\n\n    const onSetPickerOption = e => {\n      pickerOptions.value[e[0]] = e[1];\n      pickerOptions.value.panelReady = true;\n    };\n\n    const onCalendarChange = e => {\n      ctx.emit(\"calendar-change\", e);\n    };\n\n    const onPanelChange = (value, mode, view) => {\n      ctx.emit(\"panel-change\", value, mode, view);\n    };\n\n    provide(\"EP_PICKER_BASE\", {\n      props\n    });\n    return {\n      nsDate,\n      nsInput,\n      nsRange,\n      elPopperOptions,\n      isDatesPicker,\n      handleEndChange,\n      handleStartChange,\n      handleStartInput,\n      handleEndInput,\n      onUserInput,\n      handleChange,\n      handleKeydown,\n      popperPaneRef,\n      onClickOutside,\n      pickerSize,\n      isRangeInput,\n      onMouseLeave,\n      onMouseEnter,\n      onClearIconClick,\n      showClose,\n      triggerIcon,\n      onPick,\n      handleFocus,\n      handleBlur,\n      pickerVisible,\n      pickerActualVisible,\n      displayValue,\n      parsedValue,\n      setSelectionRange,\n      refPopper,\n      inputRef,\n      pickerDisabled,\n      onSetPickerOption,\n      onCalendarChange,\n      onPanelChange,\n      focus,\n      onShow,\n      onBeforeShow,\n      onHide\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"id\", \"name\", \"placeholder\", \"value\", \"disabled\", \"readonly\"];\nconst _hoisted_2 = [\"id\", \"name\", \"placeholder\", \"value\", \"disabled\", \"readonly\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  const _component_el_input = resolveComponent(\"el-input\");\n\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  return openBlock(), createBlock(_component_el_tooltip, mergeProps({\n    ref: \"refPopper\",\n    visible: _ctx.pickerVisible,\n    \"onUpdate:visible\": _cache[17] || (_cache[17] = $event => _ctx.pickerVisible = $event),\n    effect: \"light\",\n    pure: \"\",\n    trigger: \"click\"\n  }, _ctx.$attrs, {\n    teleported: \"\",\n    transition: `${_ctx.nsDate.namespace.value}-zoom-in-top`,\n    \"popper-class\": [`${_ctx.nsDate.namespace.value}-picker__popper`, _ctx.popperClass],\n    \"popper-options\": _ctx.elPopperOptions,\n    \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n    \"gpu-acceleration\": false,\n    \"stop-popper-mouse-event\": false,\n    \"hide-after\": 0,\n    persistent: \"\",\n    onBeforeShow: _ctx.onBeforeShow,\n    onShow: _ctx.onShow,\n    onHide: _ctx.onHide\n  }), {\n    default: withCtx(() => [!_ctx.isRangeInput ? (openBlock(), createBlock(_component_el_input, {\n      key: 0,\n      id: _ctx.id,\n      ref: \"inputRef\",\n      \"model-value\": _ctx.displayValue,\n      name: _ctx.name,\n      size: _ctx.pickerSize,\n      disabled: _ctx.pickerDisabled,\n      placeholder: _ctx.placeholder,\n      class: normalizeClass([_ctx.nsDate.b(\"editor\"), _ctx.nsDate.bm(\"editor\", _ctx.type), _ctx.$attrs.class]),\n      style: normalizeStyle(_ctx.$attrs.style),\n      readonly: !_ctx.editable || _ctx.readonly || _ctx.isDatesPicker || _ctx.type === \"week\",\n      label: _ctx.label,\n      tabindex: _ctx.tabindex,\n      onInput: _ctx.onUserInput,\n      onFocus: _ctx.handleFocus,\n      onKeydown: _ctx.handleKeydown,\n      onChange: _ctx.handleChange,\n      onMouseenter: _ctx.onMouseEnter,\n      onMouseleave: _ctx.onMouseLeave,\n      onClick: _cache[0] || (_cache[0] = withModifiers(() => {}, [\"stop\"]))\n    }, {\n      prefix: withCtx(() => [_ctx.triggerIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: normalizeClass(_ctx.nsInput.e(\"icon\")),\n        onClick: _ctx.handleFocus\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.triggerIcon)))]),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)]),\n      suffix: withCtx(() => [_ctx.showClose && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: normalizeClass(`${_ctx.nsInput.e(\"icon\")} clear-icon`),\n        onClick: _ctx.onClearIconClick\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)]),\n      _: 1\n    }, 8, [\"id\", \"model-value\", \"name\", \"size\", \"disabled\", \"placeholder\", \"class\", \"style\", \"readonly\", \"label\", \"tabindex\", \"onInput\", \"onFocus\", \"onKeydown\", \"onChange\", \"onMouseenter\", \"onMouseleave\"])) : (openBlock(), createElementBlock(\"div\", {\n      key: 1,\n      ref: \"inputRef\",\n      class: normalizeClass([_ctx.nsDate.b(\"editor\"), _ctx.nsDate.bm(\"editor\", _ctx.type), _ctx.nsInput.e(\"inner\"), _ctx.nsDate.is(\"disabled\", _ctx.pickerDisabled), _ctx.nsDate.is(\"active\", _ctx.pickerVisible), _ctx.nsRange.b(\"editor\"), _ctx.pickerSize ? _ctx.nsRange.bm(\"editor\", _ctx.pickerSize) : \"\", _ctx.$attrs.class]),\n      style: normalizeStyle(_ctx.$attrs.style),\n      onClick: _cache[7] || (_cache[7] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n      onMouseenter: _cache[8] || (_cache[8] = (...args) => _ctx.onMouseEnter && _ctx.onMouseEnter(...args)),\n      onMouseleave: _cache[9] || (_cache[9] = (...args) => _ctx.onMouseLeave && _ctx.onMouseLeave(...args)),\n      onKeydown: _cache[10] || (_cache[10] = (...args) => _ctx.handleKeydown && _ctx.handleKeydown(...args))\n    }, [_ctx.triggerIcon ? (openBlock(), createBlock(_component_el_icon, {\n      key: 0,\n      class: normalizeClass([_ctx.nsInput.e(\"icon\"), _ctx.nsRange.e(\"icon\")]),\n      onClick: _ctx.handleFocus\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.triggerIcon)))]),\n      _: 1\n    }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"input\", {\n      id: _ctx.id && _ctx.id[0],\n      autocomplete: \"off\",\n      name: _ctx.name && _ctx.name[0],\n      placeholder: _ctx.startPlaceholder,\n      value: _ctx.displayValue && _ctx.displayValue[0],\n      disabled: _ctx.pickerDisabled,\n      readonly: !_ctx.editable || _ctx.readonly,\n      class: normalizeClass(_ctx.nsRange.b(\"input\")),\n      onInput: _cache[1] || (_cache[1] = (...args) => _ctx.handleStartInput && _ctx.handleStartInput(...args)),\n      onChange: _cache[2] || (_cache[2] = (...args) => _ctx.handleStartChange && _ctx.handleStartChange(...args)),\n      onFocus: _cache[3] || (_cache[3] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args))\n    }, null, 42, _hoisted_1), renderSlot(_ctx.$slots, \"range-separator\", {}, () => [createElementVNode(\"span\", {\n      class: normalizeClass(_ctx.nsRange.b(\"separator\"))\n    }, toDisplayString(_ctx.rangeSeparator), 3)]), createElementVNode(\"input\", {\n      id: _ctx.id && _ctx.id[1],\n      autocomplete: \"off\",\n      name: _ctx.name && _ctx.name[1],\n      placeholder: _ctx.endPlaceholder,\n      value: _ctx.displayValue && _ctx.displayValue[1],\n      disabled: _ctx.pickerDisabled,\n      readonly: !_ctx.editable || _ctx.readonly,\n      class: normalizeClass(_ctx.nsRange.b(\"input\")),\n      onFocus: _cache[4] || (_cache[4] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n      onInput: _cache[5] || (_cache[5] = (...args) => _ctx.handleEndInput && _ctx.handleEndInput(...args)),\n      onChange: _cache[6] || (_cache[6] = (...args) => _ctx.handleEndChange && _ctx.handleEndChange(...args))\n    }, null, 42, _hoisted_2), _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n      key: 1,\n      class: normalizeClass([_ctx.nsInput.e(\"icon\"), _ctx.nsRange.e(\"close-icon\"), {\n        [_ctx.nsRange.e(\"close-icon--hidden\")]: !_ctx.showClose\n      }]),\n      onClick: _ctx.onClearIconClick\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n      _: 1\n    }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 38))]),\n    content: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {\n      visible: _ctx.pickerVisible,\n      actualVisible: _ctx.pickerActualVisible,\n      parsedValue: _ctx.parsedValue,\n      format: _ctx.format,\n      unlinkPanels: _ctx.unlinkPanels,\n      type: _ctx.type,\n      defaultValue: _ctx.defaultValue,\n      onPick: _cache[11] || (_cache[11] = (...args) => _ctx.onPick && _ctx.onPick(...args)),\n      onSelectRange: _cache[12] || (_cache[12] = (...args) => _ctx.setSelectionRange && _ctx.setSelectionRange(...args)),\n      onSetPickerOption: _cache[13] || (_cache[13] = (...args) => _ctx.onSetPickerOption && _ctx.onSetPickerOption(...args)),\n      onCalendarChange: _cache[14] || (_cache[14] = (...args) => _ctx.onCalendarChange && _ctx.onCalendarChange(...args)),\n      onPanelChange: _cache[15] || (_cache[15] = (...args) => _ctx.onPanelChange && _ctx.onPanelChange(...args)),\n      onMousedown: _cache[16] || (_cache[16] = withModifiers(() => {}, [\"stop\"]))\n    })]),\n    _: 3\n  }, 16, [\"visible\", \"transition\", \"popper-class\", \"popper-options\", \"onBeforeShow\", \"onShow\", \"onHide\"]);\n}\n\nvar CommonPicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/common/picker.vue\"]]);\n\nexport { CommonPicker as default };","map":{"version":3,"mappings":"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","names":["dateEquals","a","b","aIsDate","bIsDate","getTime","valueEquals","Array","aIsArray","bIsArray","length","every","item","index","parser","date","format","lang","day","isEmpty","dayjs","locale","isValid","formatter","_sfc_main","defineComponent","name","components","ElInput","ElTooltip","ElIcon","props","emits","setup","ctx","useLocale","useNamespace","elForm","formContextKey","elFormItem","formItemContextKey","elPopperOptions","refPopper","ref","inputRef","watch","val","_a","userInput","value","nextTick","emitChange","blurInput","valueOnOpen","modelValue","formatValue","_","valueFormat","computed","refStartInput","refInput","refEndInput","setSelectionRange","_inputs","start","end","focus","pickerVisible","visible","result","emitInput","pickerActualVisible","emit","input","pickerDisabled","e","getDefaultValue","getRangeAvailableTime","pickerOptions","panelReady","formattedValue","formatDayjsToString","valueIsEmpty","onClearIconClick","event","showClose","onMouseEnter","isRangeInput","pickerSize","popperPaneRef","_b","unref","onClickOutside","forEach","parseUserInput","formatToString","handleChange","setTimeout","includes","document","code","isValidValue","handleKeydown","handleStartInput","target","displayValue","parsedValue","newValue","onSetPickerOption","onCalendarChange","provide","nsDate","nsInput","nsRange","isDatesPicker","handleEndChange","handleStartChange","handleEndInput","onUserInput","onMouseLeave","triggerIcon","onPick","handleFocus","handleBlur","_hoisted_1","_hoisted_2","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_el_input","_component_el_tooltip","effect","pure","trigger","teleported","transition","onBeforeShow","onShow","onHide","default","_openBlock","key","id","size","disabled","placeholder","class","style","readonly","label","tabindex","onInput","onFocus","onKeydown","onChange","onMouseleave","onClick","prefix","_createBlock","_createCommentVNode","suffix","is","onMouseenter","_createElementVNode","autocomplete","_renderSlot","_toDisplayString","content","actualVisible","unlinkPanels","type","defaultValue"],"sources":["../../../../../../../packages/components/time-picker/src/common/picker.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"refPopper\"\n    v-model:visible=\"pickerVisible\"\n    effect=\"light\"\n    pure\n    trigger=\"click\"\n    v-bind=\"$attrs\"\n    teleported\n    :transition=\"`${nsDate.namespace.value}-zoom-in-top`\"\n    :popper-class=\"[`${nsDate.namespace.value}-picker__popper`, popperClass]\"\n    :popper-options=\"elPopperOptions\"\n    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n    :gpu-acceleration=\"false\"\n    :stop-popper-mouse-event=\"false\"\n    :hide-after=\"0\"\n    persistent\n    @before-show=\"onBeforeShow\"\n    @show=\"onShow\"\n    @hide=\"onHide\"\n  >\n    <template #default>\n      <el-input\n        v-if=\"!isRangeInput\"\n        :id=\"id\"\n        ref=\"inputRef\"\n        :model-value=\"displayValue\"\n        :name=\"name\"\n        :size=\"pickerSize\"\n        :disabled=\"pickerDisabled\"\n        :placeholder=\"placeholder\"\n        :class=\"[nsDate.b('editor'), nsDate.bm('editor', type), $attrs.class]\"\n        :style=\"$attrs.style\"\n        :readonly=\"!editable || readonly || isDatesPicker || type === 'week'\"\n        :label=\"label\"\n        :tabindex=\"tabindex\"\n        @input=\"onUserInput\"\n        @focus=\"handleFocus\"\n        @keydown=\"handleKeydown\"\n        @change=\"handleChange\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @click.stop\n      >\n        <template #prefix>\n          <el-icon\n            v-if=\"triggerIcon\"\n            :class=\"nsInput.e('icon')\"\n            @click=\"handleFocus\"\n          >\n            <component :is=\"triggerIcon\" />\n          </el-icon>\n        </template>\n        <template #suffix>\n          <el-icon\n            v-if=\"showClose && clearIcon\"\n            :class=\"`${nsInput.e('icon')} clear-icon`\"\n            @click=\"onClearIconClick\"\n          >\n            <component :is=\"clearIcon\" />\n          </el-icon>\n        </template>\n      </el-input>\n      <div\n        v-else\n        ref=\"inputRef\"\n        :class=\"[\n          nsDate.b('editor'),\n          nsDate.bm('editor', type),\n          nsInput.e('inner'),\n          nsDate.is('disabled', pickerDisabled),\n          nsDate.is('active', pickerVisible),\n          nsRange.b('editor'),\n          pickerSize ? nsRange.bm('editor', pickerSize) : '',\n          $attrs.class,\n        ]\"\n        :style=\"$attrs.style\"\n        @click=\"handleFocus\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @keydown=\"handleKeydown\"\n      >\n        <el-icon\n          v-if=\"triggerIcon\"\n          :class=\"[nsInput.e('icon'), nsRange.e('icon')]\"\n          @click=\"handleFocus\"\n        >\n          <component :is=\"triggerIcon\" />\n        </el-icon>\n        <input\n          :id=\"id && id[0]\"\n          autocomplete=\"off\"\n          :name=\"name && name[0]\"\n          :placeholder=\"startPlaceholder\"\n          :value=\"displayValue && displayValue[0]\"\n          :disabled=\"pickerDisabled\"\n          :readonly=\"!editable || readonly\"\n          :class=\"nsRange.b('input')\"\n          @input=\"handleStartInput\"\n          @change=\"handleStartChange\"\n          @focus=\"handleFocus\"\n        />\n        <slot name=\"range-separator\">\n          <span :class=\"nsRange.b('separator')\">{{ rangeSeparator }}</span>\n        </slot>\n        <input\n          :id=\"id && id[1]\"\n          autocomplete=\"off\"\n          :name=\"name && name[1]\"\n          :placeholder=\"endPlaceholder\"\n          :value=\"displayValue && displayValue[1]\"\n          :disabled=\"pickerDisabled\"\n          :readonly=\"!editable || readonly\"\n          :class=\"nsRange.b('input')\"\n          @focus=\"handleFocus\"\n          @input=\"handleEndInput\"\n          @change=\"handleEndChange\"\n        />\n        <el-icon\n          v-if=\"clearIcon\"\n          :class=\"[\n            nsInput.e('icon'),\n            nsRange.e('close-icon'),\n            {\n              [nsRange.e('close-icon--hidden')]: !showClose,\n            },\n          ]\"\n          @click=\"onClearIconClick\"\n        >\n          <component :is=\"clearIcon\" />\n        </el-icon>\n      </div>\n    </template>\n    <template #content>\n      <slot\n        :visible=\"pickerVisible\"\n        :actual-visible=\"pickerActualVisible\"\n        :parsed-value=\"parsedValue\"\n        :format=\"format\"\n        :unlink-panels=\"unlinkPanels\"\n        :type=\"type\"\n        :default-value=\"defaultValue\"\n        @pick=\"onPick\"\n        @select-range=\"setSelectionRange\"\n        @set-picker-option=\"onSetPickerOption\"\n        @calendar-change=\"onCalendarChange\"\n        @panel-change=\"onPanelChange\"\n        @mousedown.stop\n      />\n    </template>\n  </el-tooltip>\n</template>\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  unref,\n  watch,\n} from 'vue'\nimport dayjs from 'dayjs'\nimport { isEqual } from 'lodash-unified'\nimport { onClickOutside } from '@vueuse/core'\nimport { useLocale, useNamespace, useSize } from '@element-plus/hooks'\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport ElInput from '@element-plus/components/input'\nimport ElIcon from '@element-plus/components/icon'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport { debugWarn, isEmpty } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { Calendar, Clock } from '@element-plus/icons-vue'\nimport { timePickerDefaultProps } from './props'\n\nimport type { Dayjs } from 'dayjs'\nimport type { ComponentPublicInstance } from 'vue'\nimport type { FormContext, FormItemContext } from '@element-plus/tokens'\nimport type { Options } from '@popperjs/core'\n\ninterface PickerOptions {\n  isValidValue: (date: Dayjs) => boolean\n  handleKeydown: (event: KeyboardEvent) => void\n  parseUserInput: (value: Dayjs) => dayjs.Dayjs\n  formatToString: (value: Dayjs) => string | string[]\n  getRangeAvailableTime: (date: Dayjs) => dayjs.Dayjs\n  getDefaultValue: () => Dayjs\n  panelReady: boolean\n  handleClear: () => void\n}\n\n// Date object and string\nconst dateEquals = function (a: Date | any, b: Date | any) {\n  const aIsDate = a instanceof Date\n  const bIsDate = b instanceof Date\n  if (aIsDate && bIsDate) {\n    return a.getTime() === b.getTime()\n  }\n  if (!aIsDate && !bIsDate) {\n    return a === b\n  }\n  return false\n}\n\nconst valueEquals = function (a: Array<Date> | any, b: Array<Date> | any) {\n  const aIsArray = Array.isArray(a)\n  const bIsArray = Array.isArray(b)\n  if (aIsArray && bIsArray) {\n    if (a.length !== b.length) {\n      return false\n    }\n    return (a as Array<Date>).every((item, index) => dateEquals(item, b[index]))\n  }\n  if (!aIsArray && !bIsArray) {\n    return dateEquals(a, b)\n  }\n  return false\n}\n\nconst parser = function (\n  date: string | number | Date,\n  format: string,\n  lang: string\n): Dayjs {\n  const day =\n    isEmpty(format) || format === 'x'\n      ? dayjs(date).locale(lang)\n      : dayjs(date, format).locale(lang)\n  return day.isValid() ? day : undefined\n}\n\nconst formatter = function (\n  date: string | number | Date,\n  format: string,\n  lang: string\n) {\n  if (isEmpty(format)) return date\n  if (format === 'x') return +date\n  return dayjs(date).locale(lang).format(format)\n}\n\nexport default defineComponent({\n  name: 'Picker',\n  components: {\n    ElInput,\n    ElTooltip,\n    ElIcon,\n  },\n  props: timePickerDefaultProps,\n  emits: [\n    'update:modelValue',\n    'change',\n    'focus',\n    'blur',\n    'calendar-change',\n    'panel-change',\n    'visible-change',\n  ],\n  setup(props, ctx) {\n    const { lang } = useLocale()\n\n    const nsDate = useNamespace('date')\n    const nsInput = useNamespace('input')\n    const nsRange = useNamespace('range')\n\n    const elForm = inject(formContextKey, {} as FormContext)\n    const elFormItem = inject(formItemContextKey, {} as FormItemContext)\n    const elPopperOptions = inject('ElPopperOptions', {} as Options)\n\n    const refPopper = ref<InstanceType<typeof ElTooltip>>()\n    const inputRef = ref<HTMLElement | ComponentPublicInstance>()\n    const pickerVisible = ref(false)\n    const pickerActualVisible = ref(false)\n    const valueOnOpen = ref(null)\n\n    watch(pickerVisible, (val) => {\n      if (!val) {\n        userInput.value = null\n        nextTick(() => {\n          emitChange(props.modelValue)\n        })\n        ctx.emit('blur')\n        blurInput()\n        props.validateEvent &&\n          elFormItem.validate?.('blur').catch((err) => debugWarn(err))\n      } else {\n        valueOnOpen.value = props.modelValue\n      }\n    })\n    const emitChange = (val, isClear?: boolean) => {\n      // determine user real change only\n      if (isClear || !valueEquals(val, valueOnOpen.value)) {\n        ctx.emit('change', val)\n        props.validateEvent &&\n          elFormItem.validate?.('change').catch((err) => debugWarn(err))\n      }\n    }\n    const emitInput = (val) => {\n      if (!valueEquals(props.modelValue, val)) {\n        let formatValue\n        if (Array.isArray(val)) {\n          formatValue = val.map((_) =>\n            formatter(_, props.valueFormat, lang.value)\n          )\n        } else if (val) {\n          formatValue = formatter(val, props.valueFormat, lang.value)\n        }\n        ctx.emit('update:modelValue', val ? formatValue : val, lang.value)\n      }\n    }\n    const refInput = computed<HTMLInputElement[]>(() => {\n      if (inputRef.value) {\n        const _r = isRangeInput.value\n          ? inputRef.value\n          : (inputRef.value as any as ComponentPublicInstance).$el\n        return Array.from<HTMLInputElement>(_r.querySelectorAll('input'))\n      }\n      return []\n    })\n    const refStartInput = computed(() => {\n      return refInput?.value[0]\n    })\n    const refEndInput = computed(() => {\n      return refInput?.value[1]\n    })\n    const setSelectionRange = (start, end, pos) => {\n      const _inputs = refInput.value\n      if (!_inputs.length) return\n      if (!pos || pos === 'min') {\n        _inputs[0].setSelectionRange(start, end)\n        _inputs[0].focus()\n      } else if (pos === 'max') {\n        _inputs[1].setSelectionRange(start, end)\n        _inputs[1].focus()\n      }\n    }\n    const onPick = (date: any = '', visible = false) => {\n      pickerVisible.value = visible\n      let result\n      if (Array.isArray(date)) {\n        result = date.map((_) => _.toDate())\n      } else {\n        // clear btn emit null\n        result = date ? date.toDate() : date\n      }\n      userInput.value = null\n      emitInput(result)\n    }\n\n    const onBeforeShow = () => {\n      pickerActualVisible.value = true\n    }\n\n    const onShow = () => {\n      ctx.emit('visible-change', true)\n    }\n\n    const onHide = () => {\n      pickerActualVisible.value = false\n      ctx.emit('visible-change', false)\n    }\n\n    const focus = (focusStartInput = true) => {\n      let input = refStartInput.value\n      if (!focusStartInput && isRangeInput.value) {\n        input = refEndInput.value\n      }\n      if (input) {\n        input.focus()\n      }\n    }\n\n    const handleFocus = (e) => {\n      if (props.readonly || pickerDisabled.value || pickerVisible.value) return\n      pickerVisible.value = true\n      ctx.emit('focus', e)\n    }\n\n    const handleBlur = () => {\n      refPopper.value?.onClose()\n      blurInput()\n    }\n\n    const pickerDisabled = computed(() => {\n      return props.disabled || elForm.disabled\n    })\n\n    const parsedValue = computed(() => {\n      let result\n      if (valueIsEmpty.value) {\n        if (pickerOptions.value.getDefaultValue) {\n          result = pickerOptions.value.getDefaultValue()\n        }\n      } else {\n        if (Array.isArray(props.modelValue)) {\n          result = props.modelValue.map((_) =>\n            parser(_, props.valueFormat, lang.value)\n          )\n        } else {\n          result = parser(props.modelValue, props.valueFormat, lang.value)\n        }\n      }\n\n      if (pickerOptions.value.getRangeAvailableTime) {\n        const availableResult =\n          pickerOptions.value.getRangeAvailableTime(result)\n        if (!isEqual(availableResult, result)) {\n          result = availableResult\n          emitInput(\n            Array.isArray(result)\n              ? result.map((_) => _.toDate())\n              : result.toDate()\n          )\n        }\n      }\n      if (Array.isArray(result) && result.some((_) => !_)) {\n        result = []\n      }\n      return result\n    })\n\n    const displayValue = computed(() => {\n      if (!pickerOptions.value.panelReady) return\n      const formattedValue = formatDayjsToString(parsedValue.value)\n      if (Array.isArray(userInput.value)) {\n        return [\n          userInput.value[0] || (formattedValue && formattedValue[0]) || '',\n          userInput.value[1] || (formattedValue && formattedValue[1]) || '',\n        ]\n      } else if (userInput.value !== null) {\n        return userInput.value\n      }\n      if (!isTimePicker.value && valueIsEmpty.value) return\n      if (!pickerVisible.value && valueIsEmpty.value) return\n      if (formattedValue) {\n        return isDatesPicker.value\n          ? (formattedValue as Array<string>).join(', ')\n          : formattedValue\n      }\n      return ''\n    })\n\n    const isTimeLikePicker = computed(() => props.type.includes('time'))\n\n    const isTimePicker = computed(() => props.type.startsWith('time'))\n\n    const isDatesPicker = computed(() => props.type === 'dates')\n\n    const triggerIcon = computed(\n      () => props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar)\n    )\n\n    const showClose = ref(false)\n\n    const onClearIconClick = (event) => {\n      if (props.readonly || pickerDisabled.value) return\n      if (showClose.value) {\n        event.stopPropagation()\n        emitInput(null)\n        emitChange(null, true)\n        showClose.value = false\n        pickerVisible.value = false\n        pickerOptions.value.handleClear && pickerOptions.value.handleClear()\n      }\n    }\n    const valueIsEmpty = computed(() => {\n      return (\n        !props.modelValue ||\n        (Array.isArray(props.modelValue) && !props.modelValue.length)\n      )\n    })\n    const onMouseEnter = () => {\n      if (props.readonly || pickerDisabled.value) return\n      if (!valueIsEmpty.value && props.clearable) {\n        showClose.value = true\n      }\n    }\n    const onMouseLeave = () => {\n      showClose.value = false\n    }\n    const isRangeInput = computed(() => {\n      return props.type.includes('range')\n    })\n\n    const pickerSize = useSize()\n\n    const popperPaneRef = computed(() => {\n      return refPopper.value?.popperRef?.contentRef\n    })\n\n    const popperEl = computed(() => unref(refPopper)?.popperRef?.contentRef)\n    const actualInputRef = computed(() => {\n      if (unref(isRangeInput)) {\n        return unref(inputRef)\n      }\n\n      return (unref(inputRef) as ComponentPublicInstance)?.$el\n    })\n\n    onClickOutside(actualInputRef, (e: PointerEvent) => {\n      const unrefedPopperEl = unref(popperEl)\n      const inputEl = unref(actualInputRef)\n      if (\n        (unrefedPopperEl &&\n          (e.target === unrefedPopperEl ||\n            e.composedPath().includes(unrefedPopperEl))) ||\n        e.target === inputEl ||\n        e.composedPath().includes(inputEl)\n      )\n        return\n      pickerVisible.value = false\n    })\n\n    const userInput = ref(null)\n\n    const handleChange = () => {\n      if (userInput.value) {\n        const value = parseUserInputToDayjs(displayValue.value)\n        if (value) {\n          if (isValidValue(value)) {\n            emitInput(\n              Array.isArray(value)\n                ? value.map((_) => _.toDate())\n                : value.toDate()\n            )\n            userInput.value = null\n          }\n        }\n      }\n      if (userInput.value === '') {\n        emitInput(null)\n        emitChange(null)\n        userInput.value = null\n      }\n    }\n\n    const blurInput = () => {\n      refInput.value.forEach((input) => input.blur())\n    }\n\n    const parseUserInputToDayjs = (value) => {\n      if (!value) return null\n      return pickerOptions.value.parseUserInput(value)\n    }\n\n    const formatDayjsToString = (value) => {\n      if (!value) return null\n      return pickerOptions.value.formatToString(value)\n    }\n\n    const isValidValue = (value) => {\n      return pickerOptions.value.isValidValue(value)\n    }\n\n    const handleKeydown = (event) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.esc) {\n        pickerVisible.value = false\n        event.stopPropagation()\n        return\n      }\n\n      if (code === EVENT_CODE.tab) {\n        if (!isRangeInput.value) {\n          handleChange()\n          pickerVisible.value = false\n          event.stopPropagation()\n        } else {\n          // user may change focus between two input\n          setTimeout(() => {\n            if (!refInput.value.includes(document.activeElement)) {\n              pickerVisible.value = false\n              blurInput()\n            }\n          }, 0)\n        }\n        return\n      }\n\n      if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {\n        if (\n          userInput.value === null ||\n          userInput.value === '' ||\n          isValidValue(parseUserInputToDayjs(displayValue.value))\n        ) {\n          handleChange()\n          pickerVisible.value = false\n        }\n        event.stopPropagation()\n        return\n      }\n\n      // if user is typing, do not let picker handle key input\n      if (userInput.value) {\n        event.stopPropagation()\n        return\n      }\n\n      if (pickerOptions.value.handleKeydown) {\n        pickerOptions.value.handleKeydown(event)\n      }\n    }\n    const onUserInput = (e) => {\n      userInput.value = e\n    }\n\n    const handleStartInput = (event) => {\n      if (userInput.value) {\n        userInput.value = [event.target.value, userInput.value[1]]\n      } else {\n        userInput.value = [event.target.value, null]\n      }\n    }\n\n    const handleEndInput = (event) => {\n      if (userInput.value) {\n        userInput.value = [userInput.value[0], event.target.value]\n      } else {\n        userInput.value = [null, event.target.value]\n      }\n    }\n\n    const handleStartChange = () => {\n      const value = parseUserInputToDayjs(userInput.value && userInput.value[0])\n      if (value && value.isValid()) {\n        userInput.value = [formatDayjsToString(value), displayValue.value[1]]\n        const newValue = [value, parsedValue.value && parsedValue.value[1]]\n        if (isValidValue(newValue)) {\n          emitInput(newValue)\n          userInput.value = null\n        }\n      }\n    }\n\n    const handleEndChange = () => {\n      const value = parseUserInputToDayjs(userInput.value && userInput.value[1])\n      if (value && value.isValid()) {\n        userInput.value = [displayValue.value[0], formatDayjsToString(value)]\n        const newValue = [parsedValue.value && parsedValue.value[0], value]\n        if (isValidValue(newValue)) {\n          emitInput(newValue)\n          userInput.value = null\n        }\n      }\n    }\n\n    const pickerOptions = ref<Partial<PickerOptions>>({})\n    const onSetPickerOption = <T extends keyof PickerOptions>(\n      e: [T, PickerOptions[T]]\n    ) => {\n      pickerOptions.value[e[0]] = e[1]\n      pickerOptions.value.panelReady = true\n    }\n\n    const onCalendarChange = (e) => {\n      ctx.emit('calendar-change', e)\n    }\n\n    const onPanelChange = (value, mode, view) => {\n      ctx.emit('panel-change', value, mode, view)\n    }\n\n    provide('EP_PICKER_BASE', {\n      props,\n    })\n\n    return {\n      nsDate,\n      nsInput,\n      nsRange,\n      // injected popper options\n      elPopperOptions,\n\n      isDatesPicker,\n      handleEndChange,\n      handleStartChange,\n      handleStartInput,\n      handleEndInput,\n      onUserInput,\n      handleChange,\n      handleKeydown,\n      popperPaneRef,\n      onClickOutside,\n      pickerSize,\n      isRangeInput,\n      onMouseLeave,\n      onMouseEnter,\n      onClearIconClick,\n      showClose,\n      triggerIcon,\n      onPick,\n      handleFocus,\n      handleBlur,\n      pickerVisible,\n      pickerActualVisible,\n      displayValue,\n      parsedValue,\n      setSelectionRange,\n      refPopper,\n      inputRef,\n      pickerDisabled,\n      onSetPickerOption,\n      onCalendarChange,\n      onPanelChange,\n      focus,\n      onShow,\n      onBeforeShow,\n      onHide,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}