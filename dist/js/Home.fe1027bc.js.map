{"version":3,"file":"js/Home.fe1027bc.js","mappings":"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","sources":["webpack://productivity/./src/pages/page-home.vue","webpack://productivity/./src/components/daily-task-item.vue","webpack://productivity/./src/components/daily-task-item.vue?865a","webpack://productivity/./src/pages/page-home.vue?c742"],"sourcesContent":["<template>\n<div>\n    <!-- <el-switch v-model=\"value1\" /> -->\n    <div v-if=\"dailyAgenda\">\n        <div v-for=\"item in dailyAgenda.dailyAgendaItems\" :key=\"item.id\">\n           <daily-task-item :dailyAgendaItem=\"item\" @saveAgendaItem=\"saveAgendaItem\"></daily-task-item>\n        </div>\n    </div>\n\n    visual DB\n        <div v-for=\"item in dailyAgenda.dailyAgendaItems\" :key=\"item.id\">\n            {{item.result}}\n        </div>\n</div>\n</template>\n\n<script>\nimport dailyTaskItem from '@/components/daily-task-item.vue'\n\nexport default { \n    components: {'daily-task-item':dailyTaskItem} ,  \n    data () {\n        return {\n            today: Math.floor(Date.now() / 1000),\n            value1: true\n        }\n    },\n    computed: {\n        dailyAgenda() {\n            let agendaObject = this.$store.state.dailyAgenda.find(agenda => \n                new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() &&\n                new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() &&\n                new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate()\n            )\n            if (agendaObject) {\n                agendaObject.dailyAgendaItems.forEach(item => {\n                    item.task = this.$store.state.tasks.find(task => task.id === item.taskID)\n                });\n                return {... agendaObject}\n            } else {\n                return null\n            }\n        }\n    },\n    methods: {\n        async saveAgendaItem(agendaItem) {\n            await this.$store.dispatch('updateDailyAgendaItem', this.dailyAgenda.id, agendaItem)\n        }\n    },\n    async created() {\n        let agendaObject = this.$store.state.dailyAgenda.find(agenda => \n            new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() &&\n            new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() &&\n            new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate()\n        )\n        if (agendaObject === undefined) {\n            await this.$store.dispatch('createDailyAgenda')\n            agendaObject = this.$store.state.dailyAgenda.find(agenda => \n                new Date(agenda.date * 1000).getFullYear() === new Date(this.today * 1000).getFullYear() &&\n                new Date(agenda.date * 1000).getMonth() === new Date(this.today * 1000).getMonth() &&\n                new Date(agenda.date * 1000).getDate() === new Date(this.today * 1000).getDate()\n            )\n        } \n        // agendaObject.dailyAgendaItems.forEach(item => {\n        //     item.task = this.$store.state.tasks.find(task => task.id === item.taskID)\n        // });\n        // this.dailyAgenda = {... agendaObject}\n\n    }\n}\n</script>\n\n<style scoped>\n\n</style>","<template>\n    <div>\n        {{item.task.name}}: {{item.task.description}}\n        <div v-if=\"item.task.type == 'boolean'\">\n            <div>goal: {{item.task.goal}}</div>\n            <input type=\"checkbox\" v-model=\"item.result\">\n            <div v-if=\"item.result\"> Complete </div>\n        </div>\n        <div v-if=\"item.task.type == 'minutes'\">\n            <div>goal: {{item.task.goal}}</div>\n            <input type=\"number\" v-model=\"item.result\">\n            <div v-if=\"item.result >= item.task.goal\"> Complete </div>\n        </div>\n        <button @click=\"save\">Save</button>\n    </div>\n</template>\n\n<script>\n\nexport default { \n    props: ['dailyAgendaItem'],\n    data () {\n        return {\n            item: {... this.dailyAgendaItem}\n        }\n    },\n    methods: {\n        save() {\n            this.$emit('saveAgendaItem', this.item)\n        }\n    },\n    created() {\n        console.log(this.item)\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n","import { render } from \"./daily-task-item.vue?vue&type=template&id=1c3b31e1\"\nimport script from \"./daily-task-item.vue?vue&type=script&lang=js\"\nexport * from \"./daily-task-item.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/samuelthomas/Desktop/productivity/Productivity/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./page-home.vue?vue&type=template&id=1b567de7\"\nimport script from \"./page-home.vue?vue&type=script&lang=js\"\nexport * from \"./page-home.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/samuelthomas/Desktop/productivity/Productivity/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementBlock","$options","_hoisted_1","_Fragment","_renderList","dailyAgendaItems","item","key","id","_createVNode","_component_daily_task_item","dailyAgendaItem","onSaveAgendaItem","result","$data","task","name","_toDisplayString","description","type","_createElementVNode","goal","$event","_hoisted_2","_hoisted_3","_hoisted_4","onClick","props","data","this","methods","save","$emit","created","console","log","__exports__","components","dailyTaskItem","today","Math","floor","Date","now","value1","computed","dailyAgenda","agendaObject","$store","state","find","agenda","date","getFullYear","getMonth","getDate","forEach","tasks","taskID","async","agendaItem","dispatch","undefined","render"],"sourceRoot":""}